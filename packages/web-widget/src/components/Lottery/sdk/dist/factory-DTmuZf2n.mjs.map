{"version":3,"file":"factory-DTmuZf2n.mjs","sources":["../src/utils/tact_Lottery.ts","../src/utils/tact_LotteryFactory.ts","../src/utils/tact_ReferralWallet.ts","../src/constants.ts","../src/utils/factory.ts"],"sourcesContent":["import {\n\ttype ABIGetter,\n\ttype ABIReceiver,\n\ttype ABIType,\n\ttype Address,\n\tBuilder,\n\tCell,\n\ttype Contract,\n\ttype ContractABI,\n\ttype ContractProvider,\n\tDictionary,\n\ttype DictionaryValue,\n\ttype Sender,\n\tSlice,\n\tTupleBuilder,\n\ttype TupleReader,\n\tbeginCell,\n\tcontractAddress,\n} from \"@ton/core\";\n\nexport type StateInit = {\n\t$$type: \"StateInit\";\n\tcode: Cell;\n\tdata: Cell;\n};\n\nexport function storeStateInit(src: StateInit) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeRef(src.code);\n\t\tb0.storeRef(src.data);\n\t};\n}\n\nexport function loadStateInit(slice: Slice) {\n\tconst sc0 = slice;\n\tconst _code = sc0.loadRef();\n\tconst _data = sc0.loadRef();\n\treturn { $$type: \"StateInit\" as const, code: _code, data: _data };\n}\n\nexport type StdAddress = {\n\t$$type: \"StdAddress\";\n\tworkchain: bigint;\n\taddress: bigint;\n};\n\nexport function storeStdAddress(src: StdAddress) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeInt(src.workchain, 8);\n\t\tb0.storeUint(src.address, 256);\n\t};\n}\n\nexport function loadStdAddress(slice: Slice) {\n\tconst sc0 = slice;\n\tconst _workchain = sc0.loadIntBig(8);\n\tconst _address = sc0.loadUintBig(256);\n\treturn {\n\t\t$$type: \"StdAddress\" as const,\n\t\tworkchain: _workchain,\n\t\taddress: _address,\n\t};\n}\n\nexport type VarAddress = {\n\t$$type: \"VarAddress\";\n\tworkchain: bigint;\n\taddress: Slice;\n};\n\nexport function storeVarAddress(src: VarAddress) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeInt(src.workchain, 32);\n\t\tb0.storeRef(src.address.asCell());\n\t};\n}\n\nexport function loadVarAddress(slice: Slice) {\n\tconst sc0 = slice;\n\tconst _workchain = sc0.loadIntBig(32);\n\tconst _address = sc0.loadRef().asSlice();\n\treturn {\n\t\t$$type: \"VarAddress\" as const,\n\t\tworkchain: _workchain,\n\t\taddress: _address,\n\t};\n}\n\nexport type Context = {\n\t$$type: \"Context\";\n\tbounced: boolean;\n\tsender: Address;\n\tvalue: bigint;\n\traw: Slice;\n};\n\nexport function storeContext(src: Context) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeBit(src.bounced);\n\t\tb0.storeAddress(src.sender);\n\t\tb0.storeInt(src.value, 257);\n\t\tb0.storeRef(src.raw.asCell());\n\t};\n}\n\nexport function loadContext(slice: Slice) {\n\tconst sc0 = slice;\n\tconst _bounced = sc0.loadBit();\n\tconst _sender = sc0.loadAddress();\n\tconst _value = sc0.loadIntBig(257);\n\tconst _raw = sc0.loadRef().asSlice();\n\treturn {\n\t\t$$type: \"Context\" as const,\n\t\tbounced: _bounced,\n\t\tsender: _sender,\n\t\tvalue: _value,\n\t\traw: _raw,\n\t};\n}\n\nexport type SendParameters = {\n\t$$type: \"SendParameters\";\n\tbounce: boolean;\n\tto: Address;\n\tvalue: bigint;\n\tmode: bigint;\n\tbody: Cell | null;\n\tcode: Cell | null;\n\tdata: Cell | null;\n};\n\nexport function storeSendParameters(src: SendParameters) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeBit(src.bounce);\n\t\tb0.storeAddress(src.to);\n\t\tb0.storeInt(src.value, 257);\n\t\tb0.storeInt(src.mode, 257);\n\t\tif (src.body !== null && src.body !== undefined) {\n\t\t\tb0.storeBit(true).storeRef(src.body);\n\t\t} else {\n\t\t\tb0.storeBit(false);\n\t\t}\n\t\tif (src.code !== null && src.code !== undefined) {\n\t\t\tb0.storeBit(true).storeRef(src.code);\n\t\t} else {\n\t\t\tb0.storeBit(false);\n\t\t}\n\t\tif (src.data !== null && src.data !== undefined) {\n\t\t\tb0.storeBit(true).storeRef(src.data);\n\t\t} else {\n\t\t\tb0.storeBit(false);\n\t\t}\n\t};\n}\n\nexport function loadSendParameters(slice: Slice) {\n\tconst sc0 = slice;\n\tconst _bounce = sc0.loadBit();\n\tconst _to = sc0.loadAddress();\n\tconst _value = sc0.loadIntBig(257);\n\tconst _mode = sc0.loadIntBig(257);\n\tconst _body = sc0.loadBit() ? sc0.loadRef() : null;\n\tconst _code = sc0.loadBit() ? sc0.loadRef() : null;\n\tconst _data = sc0.loadBit() ? sc0.loadRef() : null;\n\treturn {\n\t\t$$type: \"SendParameters\" as const,\n\t\tbounce: _bounce,\n\t\tto: _to,\n\t\tvalue: _value,\n\t\tmode: _mode,\n\t\tbody: _body,\n\t\tcode: _code,\n\t\tdata: _data,\n\t};\n}\n\nexport type Deploy = {\n\t$$type: \"Deploy\";\n\tqueryId: bigint;\n};\n\nexport function storeDeploy(src: Deploy) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeUint(2490013878, 32);\n\t\tb0.storeUint(src.queryId, 64);\n\t};\n}\n\nexport function loadDeploy(slice: Slice) {\n\tconst sc0 = slice;\n\tif (sc0.loadUint(32) !== 2490013878) {\n\t\tthrow new Error(\"Invalid prefix\");\n\t}\n\tconst _queryId = sc0.loadUintBig(64);\n\treturn { $$type: \"Deploy\" as const, queryId: _queryId };\n}\n\nexport type DeployOk = {\n\t$$type: \"DeployOk\";\n\tqueryId: bigint;\n};\n\nexport function storeDeployOk(src: DeployOk) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeUint(2952335191, 32);\n\t\tb0.storeUint(src.queryId, 64);\n\t};\n}\n\nexport function loadDeployOk(slice: Slice) {\n\tconst sc0 = slice;\n\tif (sc0.loadUint(32) !== 2952335191) {\n\t\tthrow new Error(\"Invalid prefix\");\n\t}\n\tconst _queryId = sc0.loadUintBig(64);\n\treturn { $$type: \"DeployOk\" as const, queryId: _queryId };\n}\n\nexport type FactoryDeploy = {\n\t$$type: \"FactoryDeploy\";\n\tqueryId: bigint;\n\tcashback: Address;\n};\n\nexport function storeFactoryDeploy(src: FactoryDeploy) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeUint(1829761339, 32);\n\t\tb0.storeUint(src.queryId, 64);\n\t\tb0.storeAddress(src.cashback);\n\t};\n}\n\nexport function loadFactoryDeploy(slice: Slice) {\n\tconst sc0 = slice;\n\tif (sc0.loadUint(32) !== 1829761339) {\n\t\tthrow new Error(\"Invalid prefix\");\n\t}\n\tconst _queryId = sc0.loadUintBig(64);\n\tconst _cashback = sc0.loadAddress();\n\treturn {\n\t\t$$type: \"FactoryDeploy\" as const,\n\t\tqueryId: _queryId,\n\t\tcashback: _cashback,\n\t};\n}\n\nexport type ChangeOwner = {\n\t$$type: \"ChangeOwner\";\n\tqueryId: bigint;\n\tnewOwner: Address;\n};\n\nexport function storeChangeOwner(src: ChangeOwner) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeUint(2174598809, 32);\n\t\tb0.storeUint(src.queryId, 64);\n\t\tb0.storeAddress(src.newOwner);\n\t};\n}\n\nexport function loadChangeOwner(slice: Slice) {\n\tconst sc0 = slice;\n\tif (sc0.loadUint(32) !== 2174598809) {\n\t\tthrow new Error(\"Invalid prefix\");\n\t}\n\tconst _queryId = sc0.loadUintBig(64);\n\tconst _newOwner = sc0.loadAddress();\n\treturn {\n\t\t$$type: \"ChangeOwner\" as const,\n\t\tqueryId: _queryId,\n\t\tnewOwner: _newOwner,\n\t};\n}\n\nexport type ChangeOwnerOk = {\n\t$$type: \"ChangeOwnerOk\";\n\tqueryId: bigint;\n\tnewOwner: Address;\n};\n\nexport function storeChangeOwnerOk(src: ChangeOwnerOk) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeUint(846932810, 32);\n\t\tb0.storeUint(src.queryId, 64);\n\t\tb0.storeAddress(src.newOwner);\n\t};\n}\n\nexport function loadChangeOwnerOk(slice: Slice) {\n\tconst sc0 = slice;\n\tif (sc0.loadUint(32) !== 846932810) {\n\t\tthrow new Error(\"Invalid prefix\");\n\t}\n\tconst _queryId = sc0.loadUintBig(64);\n\tconst _newOwner = sc0.loadAddress();\n\treturn {\n\t\t$$type: \"ChangeOwnerOk\" as const,\n\t\tqueryId: _queryId,\n\t\tnewOwner: _newOwner,\n\t};\n}\n\nexport type Ticket = {\n\t$$type: \"Ticket\";\n\tnumber: bigint;\n\towner: Address;\n};\n\nexport function storeTicket(src: Ticket) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeUint(src.number, 32);\n\t\tb0.storeAddress(src.owner);\n\t};\n}\n\nexport function loadTicket(slice: Slice) {\n\tconst sc0 = slice;\n\tconst _number = sc0.loadUintBig(32);\n\tconst _owner = sc0.loadAddress();\n\treturn { $$type: \"Ticket\" as const, number: _number, owner: _owner };\n}\n\nfunction dictValueParserTicket(): DictionaryValue<Ticket> {\n\treturn {\n\t\tserialize: (src, builder) => {\n\t\t\tbuilder.storeRef(beginCell().store(storeTicket(src)).endCell());\n\t\t},\n\t\tparse: (src) => {\n\t\t\treturn loadTicket(src.loadRef().beginParse());\n\t\t},\n\t};\n}\n\nexport type CreateLottery = {\n\t$$type: \"CreateLottery\";\n\tcreator: Address;\n\tprice: bigint;\n\tendTime: bigint;\n\tdiscountDivisor: bigint;\n};\n\nexport function storeCreateLottery(src: CreateLottery) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeUint(1817793233, 32);\n\t\tb0.storeAddress(src.creator);\n\t\tb0.storeInt(src.price, 257);\n\t\tb0.storeInt(src.endTime, 257);\n\t\tconst b1 = new Builder();\n\t\tb1.storeInt(src.discountDivisor, 257);\n\t\tb0.storeRef(b1.endCell());\n\t};\n}\n\nexport function loadCreateLottery(slice: Slice) {\n\tconst sc0 = slice;\n\tif (sc0.loadUint(32) !== 1817793233) {\n\t\tthrow new Error(\"Invalid prefix\");\n\t}\n\tconst _creator = sc0.loadAddress();\n\tconst _price = sc0.loadIntBig(257);\n\tconst _endTime = sc0.loadIntBig(257);\n\tconst sc1 = sc0.loadRef().beginParse();\n\tconst _discountDivisor = sc1.loadIntBig(257);\n\treturn {\n\t\t$$type: \"CreateLottery\" as const,\n\t\tcreator: _creator,\n\t\tprice: _price,\n\t\tendTime: _endTime,\n\t\tdiscountDivisor: _discountDivisor,\n\t};\n}\n\nexport type BuyTicket = {\n\t$$type: \"BuyTicket\";\n\trecipient: Address;\n\tamount: bigint;\n\tticketNumbers: Dictionary<number, number>;\n\trefWallet: Address | null;\n};\n\nexport function storeBuyTicket(src: BuyTicket) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeUint(3310573309, 32);\n\t\tb0.storeAddress(src.recipient);\n\t\tb0.storeUint(src.amount, 32);\n\t\tb0.storeDict(\n\t\t\tsrc.ticketNumbers,\n\t\t\tDictionary.Keys.Uint(32),\n\t\t\tDictionary.Values.Uint(32),\n\t\t);\n\t\tb0.storeAddress(src.refWallet);\n\t};\n}\n\nexport function loadBuyTicket(slice: Slice) {\n\tconst sc0 = slice;\n\tif (sc0.loadUint(32) !== 3310573309) {\n\t\tthrow new Error(\"Invalid prefix\");\n\t}\n\tconst _recipient = sc0.loadAddress();\n\tconst _amount = sc0.loadUintBig(32);\n\tconst _ticketNumbers = Dictionary.load(\n\t\tDictionary.Keys.Uint(32),\n\t\tDictionary.Values.Uint(32),\n\t\tsc0,\n\t);\n\tconst _refWallet = sc0.loadMaybeAddress();\n\treturn {\n\t\t$$type: \"BuyTicket\" as const,\n\t\trecipient: _recipient,\n\t\tamount: _amount,\n\t\tticketNumbers: _ticketNumbers,\n\t\trefWallet: _refWallet,\n\t};\n}\n\nexport type ClaimTickets = {\n\t$$type: \"ClaimTickets\";\n\tticketIds: Dictionary<number, number>;\n\tticketLength: bigint;\n};\n\nexport function storeClaimTickets(src: ClaimTickets) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeUint(2609204369, 32);\n\t\tb0.storeDict(\n\t\t\tsrc.ticketIds,\n\t\t\tDictionary.Keys.Uint(32),\n\t\t\tDictionary.Values.Uint(32),\n\t\t);\n\t\tb0.storeUint(src.ticketLength, 32);\n\t};\n}\n\nexport function loadClaimTickets(slice: Slice) {\n\tconst sc0 = slice;\n\tif (sc0.loadUint(32) !== 2609204369) {\n\t\tthrow new Error(\"Invalid prefix\");\n\t}\n\tconst _ticketIds = Dictionary.load(\n\t\tDictionary.Keys.Uint(32),\n\t\tDictionary.Values.Uint(32),\n\t\tsc0,\n\t);\n\tconst _ticketLength = sc0.loadUintBig(32);\n\treturn {\n\t\t$$type: \"ClaimTickets\" as const,\n\t\tticketIds: _ticketIds,\n\t\tticketLength: _ticketLength,\n\t};\n}\n\nexport type LotteryInfo = {\n\t$$type: \"LotteryInfo\";\n\tseqno: bigint;\n\tcreator: Address;\n\tticketCnt: bigint;\n\tendTime: bigint;\n\tprice: bigint;\n\tstatus: bigint;\n\tamountCollected: bigint;\n};\n\nexport function storeLotteryInfo(src: LotteryInfo) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeInt(src.seqno, 257);\n\t\tb0.storeAddress(src.creator);\n\t\tb0.storeInt(src.ticketCnt, 257);\n\t\tconst b1 = new Builder();\n\t\tb1.storeInt(src.endTime, 257);\n\t\tb1.storeInt(src.price, 257);\n\t\tb1.storeInt(src.status, 257);\n\t\tconst b2 = new Builder();\n\t\tb2.storeInt(src.amountCollected, 257);\n\t\tb1.storeRef(b2.endCell());\n\t\tb0.storeRef(b1.endCell());\n\t};\n}\n\nexport function loadLotteryInfo(slice: Slice) {\n\tconst sc0 = slice;\n\tconst _seqno = sc0.loadIntBig(257);\n\tconst _creator = sc0.loadAddress();\n\tconst _ticketCnt = sc0.loadIntBig(257);\n\tconst sc1 = sc0.loadRef().beginParse();\n\tconst _endTime = sc1.loadIntBig(257);\n\tconst _price = sc1.loadIntBig(257);\n\tconst _status = sc1.loadIntBig(257);\n\tconst sc2 = sc1.loadRef().beginParse();\n\tconst _amountCollected = sc2.loadIntBig(257);\n\treturn {\n\t\t$$type: \"LotteryInfo\" as const,\n\t\tseqno: _seqno,\n\t\tcreator: _creator,\n\t\tticketCnt: _ticketCnt,\n\t\tendTime: _endTime,\n\t\tprice: _price,\n\t\tstatus: _status,\n\t\tamountCollected: _amountCollected,\n\t};\n}\n\nfunction loadGetterTupleLotteryInfo(source: TupleReader) {\n\tconst _seqno = source.readBigNumber();\n\tconst _creator = source.readAddress();\n\tconst _ticketCnt = source.readBigNumber();\n\tconst _endTime = source.readBigNumber();\n\tconst _price = source.readBigNumber();\n\tconst _status = source.readBigNumber();\n\tconst _amountCollected = source.readBigNumber();\n\treturn {\n\t\t$$type: \"LotteryInfo\" as const,\n\t\tseqno: _seqno,\n\t\tcreator: _creator,\n\t\tticketCnt: _ticketCnt,\n\t\tendTime: _endTime,\n\t\tprice: _price,\n\t\tstatus: _status,\n\t\tamountCollected: _amountCollected,\n\t};\n}\n\nexport type Withdraw = {\n\t$$type: \"Withdraw\";\n\ttarget: Address;\n};\n\nexport function storeWithdraw(src: Withdraw) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeUint(922360000, 32);\n\t\tb0.storeAddress(src.target);\n\t};\n}\n\nexport function loadWithdraw(slice: Slice) {\n\tconst sc0 = slice;\n\tif (sc0.loadUint(32) !== 922360000) {\n\t\tthrow new Error(\"Invalid prefix\");\n\t}\n\tconst _target = sc0.loadAddress();\n\treturn { $$type: \"Withdraw\" as const, target: _target };\n}\n\nexport type Lottery$Data = {\n\t$$type: \"Lottery$Data\";\n\tfactory: Address;\n\tcreator: Address;\n\tseqno: bigint;\n\tticketCnt: bigint;\n\tendTime: bigint;\n\tprice: bigint;\n\tstatus: bigint;\n\tdiscountDivisor: bigint;\n\tclaimed: Dictionary<Address, number>;\n\tfeePercent: bigint;\n\trefPercent: bigint;\n\trewardPerBracket: Dictionary<bigint, bigint>;\n\ttickets: Dictionary<bigint, Ticket>;\n\twinnerCntPerBracket: Dictionary<bigint, bigint>;\n\tamountCollected: bigint;\n\tfeeAmount: bigint;\n\tfinalNumber: bigint;\n};\n\nexport function storeLottery$Data(src: Lottery$Data) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeAddress(src.factory);\n\t\tb0.storeAddress(src.creator);\n\t\tb0.storeInt(src.seqno, 257);\n\t\tconst b1 = new Builder();\n\t\tb1.storeInt(src.ticketCnt, 257);\n\t\tb1.storeUint(src.endTime, 256);\n\t\tb1.storeUint(src.price, 256);\n\t\tb1.storeUint(src.status, 16);\n\t\tconst b2 = new Builder();\n\t\tb2.storeInt(src.discountDivisor, 257);\n\t\tb2.storeDict(\n\t\t\tsrc.claimed,\n\t\t\tDictionary.Keys.Address(),\n\t\t\tDictionary.Values.Uint(8),\n\t\t);\n\t\tb2.storeInt(src.feePercent, 257);\n\t\tb2.storeInt(src.refPercent, 257);\n\t\tb2.storeDict(\n\t\t\tsrc.rewardPerBracket,\n\t\t\tDictionary.Keys.BigInt(257),\n\t\t\tDictionary.Values.BigUint(256),\n\t\t);\n\t\tb2.storeDict(\n\t\t\tsrc.tickets,\n\t\t\tDictionary.Keys.BigInt(257),\n\t\t\tdictValueParserTicket(),\n\t\t);\n\t\tconst b3 = new Builder();\n\t\tb3.storeDict(\n\t\t\tsrc.winnerCntPerBracket,\n\t\t\tDictionary.Keys.BigInt(257),\n\t\t\tDictionary.Values.BigUint(256),\n\t\t);\n\t\tb3.storeUint(src.amountCollected, 256);\n\t\tb3.storeUint(src.feeAmount, 256);\n\t\tb3.storeUint(src.finalNumber, 32);\n\t\tb2.storeRef(b3.endCell());\n\t\tb1.storeRef(b2.endCell());\n\t\tb0.storeRef(b1.endCell());\n\t};\n}\n\nexport function loadLottery$Data(slice: Slice) {\n\tconst sc0 = slice;\n\tconst _factory = sc0.loadAddress();\n\tconst _creator = sc0.loadAddress();\n\tconst _seqno = sc0.loadIntBig(257);\n\tconst sc1 = sc0.loadRef().beginParse();\n\tconst _ticketCnt = sc1.loadIntBig(257);\n\tconst _endTime = sc1.loadUintBig(256);\n\tconst _price = sc1.loadUintBig(256);\n\tconst _status = sc1.loadUintBig(16);\n\tconst sc2 = sc1.loadRef().beginParse();\n\tconst _discountDivisor = sc2.loadIntBig(257);\n\tconst _claimed = Dictionary.load(\n\t\tDictionary.Keys.Address(),\n\t\tDictionary.Values.Uint(8),\n\t\tsc2,\n\t);\n\tconst _feePercent = sc2.loadIntBig(257);\n\tconst _refPercent = sc2.loadIntBig(257);\n\tconst _rewardPerBracket = Dictionary.load(\n\t\tDictionary.Keys.BigInt(257),\n\t\tDictionary.Values.BigUint(256),\n\t\tsc2,\n\t);\n\tconst _tickets = Dictionary.load(\n\t\tDictionary.Keys.BigInt(257),\n\t\tdictValueParserTicket(),\n\t\tsc2,\n\t);\n\tconst sc3 = sc2.loadRef().beginParse();\n\tconst _winnerCntPerBracket = Dictionary.load(\n\t\tDictionary.Keys.BigInt(257),\n\t\tDictionary.Values.BigUint(256),\n\t\tsc3,\n\t);\n\tconst _amountCollected = sc3.loadUintBig(256);\n\tconst _feeAmount = sc3.loadUintBig(256);\n\tconst _finalNumber = sc3.loadUintBig(32);\n\treturn {\n\t\t$$type: \"Lottery$Data\" as const,\n\t\tfactory: _factory,\n\t\tcreator: _creator,\n\t\tseqno: _seqno,\n\t\tticketCnt: _ticketCnt,\n\t\tendTime: _endTime,\n\t\tprice: _price,\n\t\tstatus: _status,\n\t\tdiscountDivisor: _discountDivisor,\n\t\tclaimed: _claimed,\n\t\tfeePercent: _feePercent,\n\t\trefPercent: _refPercent,\n\t\trewardPerBracket: _rewardPerBracket,\n\t\ttickets: _tickets,\n\t\twinnerCntPerBracket: _winnerCntPerBracket,\n\t\tamountCollected: _amountCollected,\n\t\tfeeAmount: _feeAmount,\n\t\tfinalNumber: _finalNumber,\n\t};\n}\n\nexport type CreateWallet = {\n\t$$type: \"CreateWallet\";\n\towner: Address;\n};\n\nexport function storeCreateWallet(src: CreateWallet) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeUint(4268690758, 32);\n\t\tb0.storeAddress(src.owner);\n\t};\n}\n\nexport function loadCreateWallet(slice: Slice) {\n\tconst sc0 = slice;\n\tif (sc0.loadUint(32) !== 4268690758) {\n\t\tthrow new Error(\"Invalid prefix\");\n\t}\n\tconst _owner = sc0.loadAddress();\n\treturn { $$type: \"CreateWallet\" as const, owner: _owner };\n}\n\nexport type Move = {\n\t$$type: \"Move\";\n\ttarget: Address;\n};\n\nexport function storeMove(src: Move) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeUint(3211350992, 32);\n\t\tb0.storeAddress(src.target);\n\t};\n}\n\nexport function loadMove(slice: Slice) {\n\tconst sc0 = slice;\n\tif (sc0.loadUint(32) !== 3211350992) {\n\t\tthrow new Error(\"Invalid prefix\");\n\t}\n\tconst _target = sc0.loadAddress();\n\treturn { $$type: \"Move\" as const, target: _target };\n}\n\nexport type ReferralWallet$Data = {\n\t$$type: \"ReferralWallet$Data\";\n\tfactory: Address;\n\towner: Address;\n\tamount: bigint;\n\tseqno: bigint;\n};\n\nexport function storeReferralWallet$Data(src: ReferralWallet$Data) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeAddress(src.factory);\n\t\tb0.storeAddress(src.owner);\n\t\tb0.storeInt(src.amount, 257);\n\t\tconst b1 = new Builder();\n\t\tb1.storeInt(src.seqno, 257);\n\t\tb0.storeRef(b1.endCell());\n\t};\n}\n\nexport function loadReferralWallet$Data(slice: Slice) {\n\tconst sc0 = slice;\n\tconst _factory = sc0.loadAddress();\n\tconst _owner = sc0.loadAddress();\n\tconst _amount = sc0.loadIntBig(257);\n\tconst sc1 = sc0.loadRef().beginParse();\n\tconst _seqno = sc1.loadIntBig(257);\n\treturn {\n\t\t$$type: \"ReferralWallet$Data\" as const,\n\t\tfactory: _factory,\n\t\towner: _owner,\n\t\tamount: _amount,\n\t\tseqno: _seqno,\n\t};\n}\n\nexport type Draw = {\n\t$$type: \"Draw\";\n\tlotteryId: bigint;\n};\n\nexport function storeDraw(src: Draw) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeUint(746428760, 32);\n\t\tb0.storeInt(src.lotteryId, 257);\n\t};\n}\n\nexport function loadDraw(slice: Slice) {\n\tconst sc0 = slice;\n\tif (sc0.loadUint(32) !== 746428760) {\n\t\tthrow new Error(\"Invalid prefix\");\n\t}\n\tconst _lotteryId = sc0.loadIntBig(257);\n\treturn { $$type: \"Draw\" as const, lotteryId: _lotteryId };\n}\n\nexport type EmergencyWithdraw = {\n\t$$type: \"EmergencyWithdraw\";\n\tlotteryId: bigint;\n};\n\nexport function storeEmergencyWithdraw(src: EmergencyWithdraw) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeUint(807739057, 32);\n\t\tb0.storeInt(src.lotteryId, 257);\n\t};\n}\n\nexport function loadEmergencyWithdraw(slice: Slice) {\n\tconst sc0 = slice;\n\tif (sc0.loadUint(32) !== 807739057) {\n\t\tthrow new Error(\"Invalid prefix\");\n\t}\n\tconst _lotteryId = sc0.loadIntBig(257);\n\treturn { $$type: \"EmergencyWithdraw\" as const, lotteryId: _lotteryId };\n}\n\nexport type LotteryFactory$Data = {\n\t$$type: \"LotteryFactory$Data\";\n\towner: Address;\n\tlotteryCnt: bigint;\n\treferrers: Dictionary<bigint, Address>;\n\treferrer_cnt: bigint;\n\twithdraw_end: bigint;\n};\n\nexport function storeLotteryFactory$Data(src: LotteryFactory$Data) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeAddress(src.owner);\n\t\tb0.storeUint(src.lotteryCnt, 256);\n\t\tb0.storeDict(\n\t\t\tsrc.referrers,\n\t\t\tDictionary.Keys.BigInt(257),\n\t\t\tDictionary.Values.Address(),\n\t\t);\n\t\tb0.storeInt(src.referrer_cnt, 257);\n\t\tconst b1 = new Builder();\n\t\tb1.storeUint(src.withdraw_end, 256);\n\t\tb0.storeRef(b1.endCell());\n\t};\n}\n\nexport function loadLotteryFactory$Data(slice: Slice) {\n\tconst sc0 = slice;\n\tconst _owner = sc0.loadAddress();\n\tconst _lotteryCnt = sc0.loadUintBig(256);\n\tconst _referrers = Dictionary.load(\n\t\tDictionary.Keys.BigInt(257),\n\t\tDictionary.Values.Address(),\n\t\tsc0,\n\t);\n\tconst _referrerCnt = sc0.loadIntBig(257);\n\tconst sc1 = sc0.loadRef().beginParse();\n\tconst _withdrawEnd = sc1.loadUintBig(256);\n\treturn {\n\t\t$$type: \"LotteryFactory$Data\" as const,\n\t\towner: _owner,\n\t\tlotteryCnt: _lotteryCnt,\n\t\treferrers: _referrers,\n\t\treferrer_cnt: _referrerCnt,\n\t\twithdraw_end: _withdrawEnd,\n\t};\n}\n\ntype LotteryInitArgs = {\n\t$$type: \"Lottery_init_args\";\n\tfactory: Address;\n\tseqno: bigint;\n};\n\nfunction initLotteryInitArgs(src: LotteryInitArgs) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeAddress(src.factory);\n\t\tb0.storeInt(src.seqno, 257);\n\t};\n}\n\nasync function lotteryInit(factory: Address, seqno: bigint) {\n\tconst __code = Cell.fromBase64(\n\t\t\"te6ccgECPgEADwMAART/APSkE/S88sgLAQIBYgIDA8LQAdDTAwFxsKMB+kABINdJgQELuvLgiCDXCwoggQT/uvLQiYMJuvLgiFRQUwNvBPhhAvhi2zwREBESERAPEREPDhEQDhDfVRzbPPLggsj4QwHMfwHKABERERBV4Ns8ye1UOQQFAgEgJCUEeO2i7fsBkjB/4HAh10nCH5UwINcLH94gghBsWVLRuuMCIIIQxVNW/brjAiCCEJuFTJG64wIgghA2+hjAugYHCAkB9AEREQERECDXSYEBC7ry4Igg1wsKIIEE/7ry0ImDCbry4IjPFlAOINdJgQELuvLgiCDXCwoggQT/uvLQiYMJuvLgiM8WHIEBAc8ACsiBAQHPABnL/xfL/xXLDwPIgQEBzwAS9ACBAQHPABKBAQHPABL0ABL0AAPI9AAUIwDuMNMfAYIQbFlS0bry4IH6QAEg10mBAQu68uCIINcLCiCBBP+68tCJgwm68uCIAYEBAdcAgQEB1wDUAdCBAQHXADAUQzBsFDQ8PT0/ggDZN/hCVhHHBfL0gggPQkCCCB6EgPhEbpf4JfgVf/hk3iGh+BGgEM8QnH8BzjDTHwGCEMVTVv268uCB+kABINdJgQELuvLgiCDXCwoggQT/uvLQiYMJuvLgiAHTH/QEINcLAcMAjh/6QAEg10mBAQu68uCIINcLCiCBBP+68tCJgwm68uCIlHLXIW3iFEMwbBTbPH8KAuIw0x8BghCbhUyRuvLggfQE0x9ZbBKCAMIHLcAC8vSCAKYIgQEL+EItWXhBM/QKb6GUAdcBMJJbbeJu8vRwIJNTArmK6BNfA/hCf1hyECNtbW3bPDCBAQv4QhAqcXghbpVbWfRZMJjIAc8BQTP0QeIIfxMhA7SPUDDTHwGCEDb6GMC68uCB+kABINdJgQELuvLgiCDXCwoggQT/uvLQiYMJuvLgiDGCAJrf+EJWEwHHBfL0f/gnbxCCCJiWgKFyiBA0bW3bPDB/4MAAkTDjDXAgIRUC9oIAxxojwgDy9IIAv4YjwR/y9IIAkzr4I1YSufL0gRWzL8AA8vQREBEUERAPERMPDhESDg0REQ0MERQMCxETCwoREgoJEREJCBEUCAcREwcGERIGBRERBQQRFAQDERMDAhESAgEREQERFFYS2zyBHpH4QW8kE18DIr7y9DoLA/5RM6BwlCBWFbmPaIAgIFYVVCIzQTP0Dm+hlAHXATCSW23iIG7y0IAREBETERAPERIPDhERDg0REw0MERIMCxERCwoREwoJERIJCBERCAcREwcGERIGBRERBQQREwQDERIDARETARESVhLbPFYWgQEBERQB6DBXElcSVxJWEm6zDA0OARztou37cCKTIcEGiuhfAw8AvMhZAssfASDXSYEBC7ry4Igg1wsKIIEE/7ry0ImDCbry4IjPFskQJQEREwFS4CBulTBZ9FowlEEz9BXiDKQREqQPERIPDhERDg0REA0QvhCtEJwQixB6EGkQWBBHECUCho8gERIgbvLQgH8REyWogScQqQRyiBA0AxEVAxA0bW3bPDCTMFcR4gwREAwQvxCuEJ0QjBB7EGoQWRBIEDdGFFAzRRUSIQP+dSKhERARFBEQDxETDw4REg4NERENDBEUDAsREwsKERIKCRERCQgRFAgHERMHBhESBgUREQUEERQEAxETAwIREgIBEREBERRWFNs8elYWpCDC//KFcQGSIajkMVYTAakIUhCgelYXpCDC//KFcQGSIajkMVYWAakIEqC64wJXFCwQEQCyVxFXEVcRgQEBXFYUgwdBM/QMb6GUAdcBMJJbbeIgbvLQgKRBMAEREwGDByFulVtZ9FowmMgBzwFBM/RC4gwREAwQvxCuEJ0QjBB7EGoQWRBIEDdGE0AF2zEAUBERpA8REw8OERIODRERDQwREAwQvxCuEJ0QjBB7EGoQWRBIEDdGBQQAFAAAAABhY2NlcHQB/IAgVFQAUjBBM/QOb6GUAdcBMJJbbeIgbvLQgIIA1WoqgQEBJFn0DW+hkjBt3yBukjBtjifQ0x/6QAEg10mBAQu68uCIINcLCiCBBP+68tCJgwm68uCIEmwSbwLiIG7y0IBvIjH4QscF8vQREREVEREREBEUERAPERMPDhESDhQB0g0RFQ0MERQMCxETCwoREgoJERUJCBEUCAcREwcGERIGBREVBQQRFAQDERMDAhESAgERFQHbPAEREgGgERSkERARFBEQDxETDw4REg4NERENDBEQDBC/EK4QnRCMEHsQahBZEEgQN0ZQFCkC1vkBIILoHLjQ8d2kUbpEkVV8C6l0NMpb4ohd8J9FE/2yI4rzgbqOHDCCAMh6+EJWEQHHBfL0gRWzC8AAG/L0cQp/2zHgIILwngPr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\",\n\t);\n\tconst __system = Cell.fromBase64(\n\t\t\"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\",\n\t);\n\tconst builder = beginCell();\n\tbuilder.storeRef(__system);\n\tbuilder.storeUint(0, 1);\n\tinitLotteryInitArgs({ $$type: \"Lottery_init_args\", factory, seqno })(builder);\n\tconst __data = builder.endCell();\n\treturn { code: __code, data: __data };\n}\n\nconst lotteryErrors: { [key: number]: { message: string } } = {\n\t2: { message: \"Stack underflow\" },\n\t3: { message: \"Stack overflow\" },\n\t4: { message: \"Integer overflow\" },\n\t5: { message: \"Integer out of expected range\" },\n\t6: { message: \"Invalid opcode\" },\n\t7: { message: \"Type check error\" },\n\t8: { message: \"Cell overflow\" },\n\t9: { message: \"Cell underflow\" },\n\t10: { message: \"Dictionary error\" },\n\t11: { message: `'Unknown' error` },\n\t12: { message: \"Fatal error\" },\n\t13: { message: \"Out of gas error\" },\n\t14: { message: \"Virtualization error\" },\n\t32: { message: \"Action list is invalid\" },\n\t33: { message: \"Action list is too long\" },\n\t34: { message: \"Action is invalid or not supported\" },\n\t35: { message: \"Invalid source address in outbound message\" },\n\t36: { message: \"Invalid destination address in outbound message\" },\n\t37: { message: \"Not enough TON\" },\n\t38: { message: \"Not enough extra-currencies\" },\n\t39: { message: \"Outbound message does not fit into a cell after rewriting\" },\n\t40: { message: \"Cannot process a message\" },\n\t41: { message: \"Library reference is null\" },\n\t42: { message: \"Library change action error\" },\n\t43: {\n\t\tmessage:\n\t\t\t\"Exceeded maximum number of cells in the library or the maximum depth of the Merkle tree\",\n\t},\n\t50: { message: \"Account state size exceeded limits\" },\n\t128: { message: \"Null reference exception\" },\n\t129: { message: \"Invalid serialization prefix\" },\n\t130: { message: \"Invalid incoming message\" },\n\t131: { message: \"Constraints error\" },\n\t132: { message: \"Access denied\" },\n\t133: { message: \"Contract stopped\" },\n\t134: { message: \"Invalid argument\" },\n\t135: { message: \"Code of a contract was not found\" },\n\t136: { message: \"Invalid address\" },\n\t137: { message: \"Masterchain support is not enabled for this contract\" },\n\t5555: { message: \"Lottery is not active\" },\n\t7825: { message: \"Not enough Ton\" },\n\t24518: { message: \"Lottery not close\" },\n\t37690: { message: \"Lottery is over\" },\n\t39647: { message: \"Access is denied\" },\n\t42504: { message: \"Already claimed\" },\n\t49030: { message: \"Too many tickets\" },\n\t49671: { message: \"Lottery not claimable\" },\n\t50970: { message: \"No ticket specified\" },\n\t51322: { message: \"You are not creator\" },\n\t54634: { message: \"You are not owner\" },\n\t55607: { message: \"You are not factory\" },\n};\n\nconst lotteryTypes: ABIType[] = [\n\t{\n\t\tname: \"StateInit\",\n\t\theader: null,\n\t\tfields: [\n\t\t\t{ name: \"code\", type: { kind: \"simple\", type: \"cell\", optional: false } },\n\t\t\t{ name: \"data\", type: { kind: \"simple\", type: \"cell\", optional: false } },\n\t\t],\n\t},\n\t{\n\t\tname: \"StdAddress\",\n\t\theader: null,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"workchain\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 8 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"address\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 256 },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"VarAddress\",\n\t\theader: null,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"workchain\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 32 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"address\",\n\t\t\t\ttype: { kind: \"simple\", type: \"slice\", optional: false },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"Context\",\n\t\theader: null,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"bounced\",\n\t\t\t\ttype: { kind: \"simple\", type: \"bool\", optional: false },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"sender\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"value\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{ name: \"raw\", type: { kind: \"simple\", type: \"slice\", optional: false } },\n\t\t],\n\t},\n\t{\n\t\tname: \"SendParameters\",\n\t\theader: null,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"bounce\",\n\t\t\t\ttype: { kind: \"simple\", type: \"bool\", optional: false },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"to\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"value\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"mode\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{ name: \"body\", type: { kind: \"simple\", type: \"cell\", optional: true } },\n\t\t\t{ name: \"code\", type: { kind: \"simple\", type: \"cell\", optional: true } },\n\t\t\t{ name: \"data\", type: { kind: \"simple\", type: \"cell\", optional: true } },\n\t\t],\n\t},\n\t{\n\t\tname: \"Deploy\",\n\t\theader: 2490013878,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"queryId\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 64 },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"DeployOk\",\n\t\theader: 2952335191,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"queryId\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 64 },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"FactoryDeploy\",\n\t\theader: 1829761339,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"queryId\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 64 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"cashback\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"ChangeOwner\",\n\t\theader: 2174598809,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"queryId\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 64 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"newOwner\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"ChangeOwnerOk\",\n\t\theader: 846932810,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"queryId\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 64 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"newOwner\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"Ticket\",\n\t\theader: null,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"number\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 32 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"owner\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"CreateLottery\",\n\t\theader: 1817793233,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"creator\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"price\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"endTime\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"discountDivisor\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"BuyTicket\",\n\t\theader: 3310573309,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"recipient\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"amount\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 32 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"ticketNumbers\",\n\t\t\t\ttype: {\n\t\t\t\t\tkind: \"dict\",\n\t\t\t\t\tkey: \"uint\",\n\t\t\t\t\tkeyFormat: 32,\n\t\t\t\t\tvalue: \"uint\",\n\t\t\t\t\tvalueFormat: 32,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"refWallet\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: true },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"ClaimTickets\",\n\t\theader: 2609204369,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"ticketIds\",\n\t\t\t\ttype: {\n\t\t\t\t\tkind: \"dict\",\n\t\t\t\t\tkey: \"uint\",\n\t\t\t\t\tkeyFormat: 32,\n\t\t\t\t\tvalue: \"uint\",\n\t\t\t\t\tvalueFormat: 32,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"ticketLength\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 32 },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"LotteryInfo\",\n\t\theader: null,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"seqno\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"creator\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"ticketCnt\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"endTime\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"price\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"status\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"amountCollected\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"Withdraw\",\n\t\theader: 922360000,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"target\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"Lottery$Data\",\n\t\theader: null,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"factory\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"creator\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"seqno\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"ticketCnt\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"endTime\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 256 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"price\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 256 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"status\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 16 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"discountDivisor\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"claimed\",\n\t\t\t\ttype: { kind: \"dict\", key: \"address\", value: \"uint\", valueFormat: 8 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"feePercent\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"refPercent\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"rewardPerBracket\",\n\t\t\t\ttype: { kind: \"dict\", key: \"int\", value: \"uint\", valueFormat: 256 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"tickets\",\n\t\t\t\ttype: { kind: \"dict\", key: \"int\", value: \"Ticket\", valueFormat: \"ref\" },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"winnerCntPerBracket\",\n\t\t\t\ttype: { kind: \"dict\", key: \"int\", value: \"uint\", valueFormat: 256 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"amountCollected\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 256 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"feeAmount\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 256 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"finalNumber\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 32 },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"CreateWallet\",\n\t\theader: 4268690758,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"owner\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"Move\",\n\t\theader: 3211350992,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"target\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"ReferralWallet$Data\",\n\t\theader: null,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"factory\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"owner\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"amount\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"seqno\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"Draw\",\n\t\theader: 746428760,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"lotteryId\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"EmergencyWithdraw\",\n\t\theader: 807739057,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"lotteryId\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"LotteryFactory$Data\",\n\t\theader: null,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"owner\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"lotteryCnt\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 256 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"referrers\",\n\t\t\t\ttype: { kind: \"dict\", key: \"int\", value: \"address\" },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"referrer_cnt\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"withdraw_end\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 256 },\n\t\t\t},\n\t\t],\n\t},\n];\n\nconst lotteryGetters: ABIGetter[] = [\n\t{\n\t\tname: \"allTickets\",\n\t\targuments: [],\n\t\treturnType: {\n\t\t\tkind: \"dict\",\n\t\t\tkey: \"int\",\n\t\t\tvalue: \"Ticket\",\n\t\t\tvalueFormat: \"ref\",\n\t\t},\n\t},\n\t{\n\t\tname: \"isClaimable\",\n\t\targuments: [\n\t\t\t{\n\t\t\t\tname: \"user\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t],\n\t\treturnType: { kind: \"simple\", type: \"bool\", optional: false },\n\t},\n\t{\n\t\tname: \"calculateTotalPriceForBulkTickets\",\n\t\targuments: [\n\t\t\t{\n\t\t\t\tname: \"amount\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t],\n\t\treturnType: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t},\n\t{\n\t\tname: \"winningNumber\",\n\t\targuments: [],\n\t\treturnType: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t},\n\t{\n\t\tname: \"info\",\n\t\targuments: [],\n\t\treturnType: { kind: \"simple\", type: \"LotteryInfo\", optional: false },\n\t},\n\t{\n\t\tname: \"calculateRewardsForTicketId\",\n\t\targuments: [\n\t\t\t{\n\t\t\t\tname: \"ticketId\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t],\n\t\treturnType: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t},\n];\n\nexport const Lottery_getterMapping: { [key: string]: string } = {\n\tallTickets: \"getAllTickets\",\n\tisClaimable: \"getIsClaimable\",\n\tcalculateTotalPriceForBulkTickets: \"getCalculateTotalPriceForBulkTickets\",\n\twinningNumber: \"getWinningNumber\",\n\tinfo: \"getInfo\",\n\tcalculateRewardsForTicketId: \"getCalculateRewardsForTicketId\",\n};\n\nconst lotteryReceivers: ABIReceiver[] = [\n\t{ receiver: \"internal\", message: { kind: \"typed\", type: \"CreateLottery\" } },\n\t{ receiver: \"internal\", message: { kind: \"typed\", type: \"BuyTicket\" } },\n\t{ receiver: \"internal\", message: { kind: \"text\", text: \"close\" } },\n\t{ receiver: \"internal\", message: { kind: \"text\", text: \"draw\" } },\n\t{ receiver: \"internal\", message: { kind: \"typed\", type: \"ClaimTickets\" } },\n\t{ receiver: \"internal\", message: { kind: \"text\", text: \"widrawCommission\" } },\n\t{ receiver: \"internal\", message: { kind: \"text\", text: \"moveFunds\" } },\n\t{ receiver: \"internal\", message: { kind: \"text\", text: \"addFunds\" } },\n\t{ receiver: \"internal\", message: { kind: \"typed\", type: \"Withdraw\" } },\n];\n\nexport class Lottery implements Contract {\n\tstatic async init(factory: Address, seqno: bigint) {\n\t\treturn await lotteryInit(factory, seqno);\n\t}\n\n\tstatic async fromInit(factory: Address, seqno: bigint) {\n\t\tconst init = await lotteryInit(factory, seqno);\n\t\tconst address = contractAddress(0, init);\n\t\treturn new Lottery(address, init);\n\t}\n\n\tstatic fromAddress(address: Address) {\n\t\treturn new Lottery(address);\n\t}\n\n\treadonly address: Address;\n\treadonly init?: { code: Cell; data: Cell };\n\treadonly abi: ContractABI = {\n\t\ttypes: lotteryTypes,\n\t\tgetters: lotteryGetters,\n\t\treceivers: lotteryReceivers,\n\t\terrors: lotteryErrors,\n\t};\n\n\tprivate constructor(address: Address, init?: { code: Cell; data: Cell }) {\n\t\tthis.address = address;\n\t\tthis.init = init;\n\t}\n\n\tasync send(\n\t\tprovider: ContractProvider,\n\t\tvia: Sender,\n\t\targs: { value: bigint; bounce?: boolean | null | undefined },\n\t\tmessage:\n\t\t\t| CreateLottery\n\t\t\t| BuyTicket\n\t\t\t| \"close\"\n\t\t\t| \"draw\"\n\t\t\t| ClaimTickets\n\t\t\t| \"widrawCommission\"\n\t\t\t| \"moveFunds\"\n\t\t\t| \"addFunds\"\n\t\t\t| Withdraw,\n\t) {\n\t\tlet body: Cell | null = null;\n\t\tif (\n\t\t\tmessage &&\n\t\t\ttypeof message === \"object\" &&\n\t\t\t!(message instanceof Slice) &&\n\t\t\tmessage.$$type === \"CreateLottery\"\n\t\t) {\n\t\t\tbody = beginCell().store(storeCreateLottery(message)).endCell();\n\t\t}\n\t\tif (\n\t\t\tmessage &&\n\t\t\ttypeof message === \"object\" &&\n\t\t\t!(message instanceof Slice) &&\n\t\t\tmessage.$$type === \"BuyTicket\"\n\t\t) {\n\t\t\tbody = beginCell().store(storeBuyTicket(message)).endCell();\n\t\t}\n\t\tif (message === \"close\") {\n\t\t\tbody = beginCell().storeUint(0, 32).storeStringTail(message).endCell();\n\t\t}\n\t\tif (message === \"draw\") {\n\t\t\tbody = beginCell().storeUint(0, 32).storeStringTail(message).endCell();\n\t\t}\n\t\tif (\n\t\t\tmessage &&\n\t\t\ttypeof message === \"object\" &&\n\t\t\t!(message instanceof Slice) &&\n\t\t\tmessage.$$type === \"ClaimTickets\"\n\t\t) {\n\t\t\tbody = beginCell().store(storeClaimTickets(message)).endCell();\n\t\t}\n\t\tif (message === \"widrawCommission\") {\n\t\t\tbody = beginCell().storeUint(0, 32).storeStringTail(message).endCell();\n\t\t}\n\t\tif (message === \"moveFunds\") {\n\t\t\tbody = beginCell().storeUint(0, 32).storeStringTail(message).endCell();\n\t\t}\n\t\tif (message === \"addFunds\") {\n\t\t\tbody = beginCell().storeUint(0, 32).storeStringTail(message).endCell();\n\t\t}\n\t\tif (\n\t\t\tmessage &&\n\t\t\ttypeof message === \"object\" &&\n\t\t\t!(message instanceof Slice) &&\n\t\t\tmessage.$$type === \"Withdraw\"\n\t\t) {\n\t\t\tbody = beginCell().store(storeWithdraw(message)).endCell();\n\t\t}\n\t\tif (body === null) {\n\t\t\tthrow new Error(\"Invalid message type\");\n\t\t}\n\n\t\tawait provider.internal(via, { ...args, body: body });\n\t}\n\n\tasync getAllTickets(provider: ContractProvider) {\n\t\tconst builder = new TupleBuilder();\n\t\tconst source = (await provider.get(\"allTickets\", builder.build())).stack;\n\t\tconst result = Dictionary.loadDirect(\n\t\t\tDictionary.Keys.BigInt(257),\n\t\t\tdictValueParserTicket(),\n\t\t\tsource.readCellOpt(),\n\t\t);\n\t\treturn result;\n\t}\n\n\tasync getIsClaimable(provider: ContractProvider, user: Address) {\n\t\tconst builder = new TupleBuilder();\n\t\tbuilder.writeAddress(user);\n\t\tconst source = (await provider.get(\"isClaimable\", builder.build())).stack;\n\t\tconst result = source.readBoolean();\n\t\treturn result;\n\t}\n\n\tasync getCalculateTotalPriceForBulkTickets(\n\t\tprovider: ContractProvider,\n\t\tamount: bigint,\n\t) {\n\t\tconst builder = new TupleBuilder();\n\t\tbuilder.writeNumber(amount);\n\t\tconst source = (\n\t\t\tawait provider.get(\"calculateTotalPriceForBulkTickets\", builder.build())\n\t\t).stack;\n\t\tconst result = source.readBigNumber();\n\t\treturn result;\n\t}\n\n\tasync getWinningNumber(provider: ContractProvider) {\n\t\tconst builder = new TupleBuilder();\n\t\tconst source = (await provider.get(\"winningNumber\", builder.build())).stack;\n\t\tconst result = source.readBigNumber();\n\t\treturn result;\n\t}\n\n\tasync getInfo(provider: ContractProvider) {\n\t\tconst builder = new TupleBuilder();\n\t\tconst source = (await provider.get(\"info\", builder.build())).stack;\n\t\tconst result = loadGetterTupleLotteryInfo(source);\n\t\treturn result;\n\t}\n\n\tasync getCalculateRewardsForTicketId(\n\t\tprovider: ContractProvider,\n\t\tticketId: bigint,\n\t) {\n\t\tconst builder = new TupleBuilder();\n\t\tbuilder.writeNumber(ticketId);\n\t\tconst source = (\n\t\t\tawait provider.get(\"calculateRewardsForTicketId\", builder.build())\n\t\t).stack;\n\t\tconst result = source.readBigNumber();\n\t\treturn result;\n\t}\n}\n","import {\n\ttype ABIGetter,\n\ttype ABIReceiver,\n\ttype ABIType,\n\ttype Address,\n\tBuilder,\n\tCell,\n\ttype Contract,\n\ttype ContractABI,\n\ttype ContractProvider,\n\tDictionary,\n\ttype DictionaryValue,\n\ttype Sender,\n\tSlice,\n\tTupleBuilder,\n\tbeginCell,\n\tcontractAddress,\n} from \"@ton/core\";\n\nexport type StateInit = {\n\t$$type: \"StateInit\";\n\tcode: Cell;\n\tdata: Cell;\n};\n\nexport function storeStateInit(src: StateInit) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeRef(src.code);\n\t\tb0.storeRef(src.data);\n\t};\n}\n\nexport function loadStateInit(slice: Slice) {\n\tconst sc0 = slice;\n\tconst _code = sc0.loadRef();\n\tconst _data = sc0.loadRef();\n\treturn { $$type: \"StateInit\" as const, code: _code, data: _data };\n}\n\nexport type StdAddress = {\n\t$$type: \"StdAddress\";\n\tworkchain: bigint;\n\taddress: bigint;\n};\n\nexport function storeStdAddress(src: StdAddress) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeInt(src.workchain, 8);\n\t\tb0.storeUint(src.address, 256);\n\t};\n}\n\nexport function loadStdAddress(slice: Slice) {\n\tconst sc0 = slice;\n\tconst _workchain = sc0.loadIntBig(8);\n\tconst _address = sc0.loadUintBig(256);\n\treturn {\n\t\t$$type: \"StdAddress\" as const,\n\t\tworkchain: _workchain,\n\t\taddress: _address,\n\t};\n}\n\nexport type VarAddress = {\n\t$$type: \"VarAddress\";\n\tworkchain: bigint;\n\taddress: Slice;\n};\n\nexport function storeVarAddress(src: VarAddress) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeInt(src.workchain, 32);\n\t\tb0.storeRef(src.address.asCell());\n\t};\n}\n\nexport function loadVarAddress(slice: Slice) {\n\tconst sc0 = slice;\n\tconst _workchain = sc0.loadIntBig(32);\n\tconst _address = sc0.loadRef().asSlice();\n\treturn {\n\t\t$$type: \"VarAddress\" as const,\n\t\tworkchain: _workchain,\n\t\taddress: _address,\n\t};\n}\n\nexport type Context = {\n\t$$type: \"Context\";\n\tbounced: boolean;\n\tsender: Address;\n\tvalue: bigint;\n\traw: Slice;\n};\n\nexport function storeContext(src: Context) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeBit(src.bounced);\n\t\tb0.storeAddress(src.sender);\n\t\tb0.storeInt(src.value, 257);\n\t\tb0.storeRef(src.raw.asCell());\n\t};\n}\n\nexport function loadContext(slice: Slice) {\n\tconst sc0 = slice;\n\tconst _bounced = sc0.loadBit();\n\tconst _sender = sc0.loadAddress();\n\tconst _value = sc0.loadIntBig(257);\n\tconst _raw = sc0.loadRef().asSlice();\n\treturn {\n\t\t$$type: \"Context\" as const,\n\t\tbounced: _bounced,\n\t\tsender: _sender,\n\t\tvalue: _value,\n\t\traw: _raw,\n\t};\n}\n\nexport type SendParameters = {\n\t$$type: \"SendParameters\";\n\tbounce: boolean;\n\tto: Address;\n\tvalue: bigint;\n\tmode: bigint;\n\tbody: Cell | null;\n\tcode: Cell | null;\n\tdata: Cell | null;\n};\n\nexport function storeSendParameters(src: SendParameters) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeBit(src.bounce);\n\t\tb0.storeAddress(src.to);\n\t\tb0.storeInt(src.value, 257);\n\t\tb0.storeInt(src.mode, 257);\n\t\tif (src.body !== null && src.body !== undefined) {\n\t\t\tb0.storeBit(true).storeRef(src.body);\n\t\t} else {\n\t\t\tb0.storeBit(false);\n\t\t}\n\t\tif (src.code !== null && src.code !== undefined) {\n\t\t\tb0.storeBit(true).storeRef(src.code);\n\t\t} else {\n\t\t\tb0.storeBit(false);\n\t\t}\n\t\tif (src.data !== null && src.data !== undefined) {\n\t\t\tb0.storeBit(true).storeRef(src.data);\n\t\t} else {\n\t\t\tb0.storeBit(false);\n\t\t}\n\t};\n}\n\nexport function loadSendParameters(slice: Slice) {\n\tconst sc0 = slice;\n\tconst _bounce = sc0.loadBit();\n\tconst _to = sc0.loadAddress();\n\tconst _value = sc0.loadIntBig(257);\n\tconst _mode = sc0.loadIntBig(257);\n\tconst _body = sc0.loadBit() ? sc0.loadRef() : null;\n\tconst _code = sc0.loadBit() ? sc0.loadRef() : null;\n\tconst _data = sc0.loadBit() ? sc0.loadRef() : null;\n\treturn {\n\t\t$$type: \"SendParameters\" as const,\n\t\tbounce: _bounce,\n\t\tto: _to,\n\t\tvalue: _value,\n\t\tmode: _mode,\n\t\tbody: _body,\n\t\tcode: _code,\n\t\tdata: _data,\n\t};\n}\n\nexport type Deploy = {\n\t$$type: \"Deploy\";\n\tqueryId: bigint;\n};\n\nexport function storeDeploy(src: Deploy) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeUint(2490013878, 32);\n\t\tb0.storeUint(src.queryId, 64);\n\t};\n}\n\nexport function loadDeploy(slice: Slice) {\n\tconst sc0 = slice;\n\tif (sc0.loadUint(32) !== 2490013878) {\n\t\tthrow new Error(\"Invalid prefix\");\n\t}\n\tconst _queryId = sc0.loadUintBig(64);\n\treturn { $$type: \"Deploy\" as const, queryId: _queryId };\n}\n\nexport type DeployOk = {\n\t$$type: \"DeployOk\";\n\tqueryId: bigint;\n};\n\nexport function storeDeployOk(src: DeployOk) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeUint(2952335191, 32);\n\t\tb0.storeUint(src.queryId, 64);\n\t};\n}\n\nexport function loadDeployOk(slice: Slice) {\n\tconst sc0 = slice;\n\tif (sc0.loadUint(32) !== 2952335191) {\n\t\tthrow new Error(\"Invalid prefix\");\n\t}\n\tconst _queryId = sc0.loadUintBig(64);\n\treturn { $$type: \"DeployOk\" as const, queryId: _queryId };\n}\n\nexport type FactoryDeploy = {\n\t$$type: \"FactoryDeploy\";\n\tqueryId: bigint;\n\tcashback: Address;\n};\n\nexport function storeFactoryDeploy(src: FactoryDeploy) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeUint(1829761339, 32);\n\t\tb0.storeUint(src.queryId, 64);\n\t\tb0.storeAddress(src.cashback);\n\t};\n}\n\nexport function loadFactoryDeploy(slice: Slice) {\n\tconst sc0 = slice;\n\tif (sc0.loadUint(32) !== 1829761339) {\n\t\tthrow new Error(\"Invalid prefix\");\n\t}\n\tconst _queryId = sc0.loadUintBig(64);\n\tconst _cashback = sc0.loadAddress();\n\treturn {\n\t\t$$type: \"FactoryDeploy\" as const,\n\t\tqueryId: _queryId,\n\t\tcashback: _cashback,\n\t};\n}\n\nexport type ChangeOwner = {\n\t$$type: \"ChangeOwner\";\n\tqueryId: bigint;\n\tnewOwner: Address;\n};\n\nexport function storeChangeOwner(src: ChangeOwner) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeUint(2174598809, 32);\n\t\tb0.storeUint(src.queryId, 64);\n\t\tb0.storeAddress(src.newOwner);\n\t};\n}\n\nexport function loadChangeOwner(slice: Slice) {\n\tconst sc0 = slice;\n\tif (sc0.loadUint(32) !== 2174598809) {\n\t\tthrow new Error(\"Invalid prefix\");\n\t}\n\tconst _queryId = sc0.loadUintBig(64);\n\tconst _newOwner = sc0.loadAddress();\n\treturn {\n\t\t$$type: \"ChangeOwner\" as const,\n\t\tqueryId: _queryId,\n\t\tnewOwner: _newOwner,\n\t};\n}\n\nexport type ChangeOwnerOk = {\n\t$$type: \"ChangeOwnerOk\";\n\tqueryId: bigint;\n\tnewOwner: Address;\n};\n\nexport function storeChangeOwnerOk(src: ChangeOwnerOk) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeUint(846932810, 32);\n\t\tb0.storeUint(src.queryId, 64);\n\t\tb0.storeAddress(src.newOwner);\n\t};\n}\n\nexport function loadChangeOwnerOk(slice: Slice) {\n\tconst sc0 = slice;\n\tif (sc0.loadUint(32) !== 846932810) {\n\t\tthrow new Error(\"Invalid prefix\");\n\t}\n\tconst _queryId = sc0.loadUintBig(64);\n\tconst _newOwner = sc0.loadAddress();\n\treturn {\n\t\t$$type: \"ChangeOwnerOk\" as const,\n\t\tqueryId: _queryId,\n\t\tnewOwner: _newOwner,\n\t};\n}\n\nexport type Ticket = {\n\t$$type: \"Ticket\";\n\tnumber: bigint;\n\towner: Address;\n};\n\nexport function storeTicket(src: Ticket) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeUint(src.number, 32);\n\t\tb0.storeAddress(src.owner);\n\t};\n}\n\nexport function loadTicket(slice: Slice) {\n\tconst sc0 = slice;\n\tconst _number = sc0.loadUintBig(32);\n\tconst _owner = sc0.loadAddress();\n\treturn { $$type: \"Ticket\" as const, number: _number, owner: _owner };\n}\n\nfunction dictValueParserTicket(): DictionaryValue<Ticket> {\n\treturn {\n\t\tserialize: (src, builder) => {\n\t\t\tbuilder.storeRef(beginCell().store(storeTicket(src)).endCell());\n\t\t},\n\t\tparse: (src) => {\n\t\t\treturn loadTicket(src.loadRef().beginParse());\n\t\t},\n\t};\n}\n\nexport type CreateLottery = {\n\t$$type: \"CreateLottery\";\n\tcreator: Address;\n\tprice: bigint;\n\tendTime: bigint;\n\tdiscountDivisor: bigint;\n};\n\nexport function storeCreateLottery(src: CreateLottery) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeUint(1817793233, 32);\n\t\tb0.storeAddress(src.creator);\n\t\tb0.storeInt(src.price, 257);\n\t\tb0.storeInt(src.endTime, 257);\n\t\tconst b1 = new Builder();\n\t\tb1.storeInt(src.discountDivisor, 257);\n\t\tb0.storeRef(b1.endCell());\n\t};\n}\n\nexport function loadCreateLottery(slice: Slice) {\n\tconst sc0 = slice;\n\tif (sc0.loadUint(32) !== 1817793233) {\n\t\tthrow new Error(\"Invalid prefix\");\n\t}\n\tconst _creator = sc0.loadAddress();\n\tconst _price = sc0.loadIntBig(257);\n\tconst _endTime = sc0.loadIntBig(257);\n\tconst sc1 = sc0.loadRef().beginParse();\n\tconst _discountDivisor = sc1.loadIntBig(257);\n\treturn {\n\t\t$$type: \"CreateLottery\" as const,\n\t\tcreator: _creator,\n\t\tprice: _price,\n\t\tendTime: _endTime,\n\t\tdiscountDivisor: _discountDivisor,\n\t};\n}\n\nexport type BuyTicket = {\n\t$$type: \"BuyTicket\";\n\trecipient: Address;\n\tamount: bigint;\n\tticketNumbers: Dictionary<number, number>;\n\trefWallet: Address | null;\n};\n\nexport function storeBuyTicket(src: BuyTicket) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeUint(3310573309, 32);\n\t\tb0.storeAddress(src.recipient);\n\t\tb0.storeUint(src.amount, 32);\n\t\tb0.storeDict(\n\t\t\tsrc.ticketNumbers,\n\t\t\tDictionary.Keys.Uint(32),\n\t\t\tDictionary.Values.Uint(32),\n\t\t);\n\t\tb0.storeAddress(src.refWallet);\n\t};\n}\n\nexport function loadBuyTicket(slice: Slice) {\n\tconst sc0 = slice;\n\tif (sc0.loadUint(32) !== 3310573309) {\n\t\tthrow new Error(\"Invalid prefix\");\n\t}\n\tconst _recipient = sc0.loadAddress();\n\tconst _amount = sc0.loadUintBig(32);\n\tconst _ticketNumbers = Dictionary.load(\n\t\tDictionary.Keys.Uint(32),\n\t\tDictionary.Values.Uint(32),\n\t\tsc0,\n\t);\n\tconst _refWallet = sc0.loadMaybeAddress();\n\treturn {\n\t\t$$type: \"BuyTicket\" as const,\n\t\trecipient: _recipient,\n\t\tamount: _amount,\n\t\tticketNumbers: _ticketNumbers,\n\t\trefWallet: _refWallet,\n\t};\n}\n\nexport type ClaimTickets = {\n\t$$type: \"ClaimTickets\";\n\tticketIds: Dictionary<number, number>;\n\tticketLength: bigint;\n};\n\nexport function storeClaimTickets(src: ClaimTickets) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeUint(2609204369, 32);\n\t\tb0.storeDict(\n\t\t\tsrc.ticketIds,\n\t\t\tDictionary.Keys.Uint(32),\n\t\t\tDictionary.Values.Uint(32),\n\t\t);\n\t\tb0.storeUint(src.ticketLength, 32);\n\t};\n}\n\nexport function loadClaimTickets(slice: Slice) {\n\tconst sc0 = slice;\n\tif (sc0.loadUint(32) !== 2609204369) {\n\t\tthrow new Error(\"Invalid prefix\");\n\t}\n\tconst _ticketIds = Dictionary.load(\n\t\tDictionary.Keys.Uint(32),\n\t\tDictionary.Values.Uint(32),\n\t\tsc0,\n\t);\n\tconst _ticketLength = sc0.loadUintBig(32);\n\treturn {\n\t\t$$type: \"ClaimTickets\" as const,\n\t\tticketIds: _ticketIds,\n\t\tticketLength: _ticketLength,\n\t};\n}\n\nexport type LotteryInfo = {\n\t$$type: \"LotteryInfo\";\n\tseqno: bigint;\n\tcreator: Address;\n\tticketCnt: bigint;\n\tendTime: bigint;\n\tprice: bigint;\n\tstatus: bigint;\n\tamountCollected: bigint;\n};\n\nexport function storeLotteryInfo(src: LotteryInfo) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeInt(src.seqno, 257);\n\t\tb0.storeAddress(src.creator);\n\t\tb0.storeInt(src.ticketCnt, 257);\n\t\tconst b1 = new Builder();\n\t\tb1.storeInt(src.endTime, 257);\n\t\tb1.storeInt(src.price, 257);\n\t\tb1.storeInt(src.status, 257);\n\t\tconst b2 = new Builder();\n\t\tb2.storeInt(src.amountCollected, 257);\n\t\tb1.storeRef(b2.endCell());\n\t\tb0.storeRef(b1.endCell());\n\t};\n}\n\nexport function loadLotteryInfo(slice: Slice) {\n\tconst sc0 = slice;\n\tconst _seqno = sc0.loadIntBig(257);\n\tconst _creator = sc0.loadAddress();\n\tconst _ticketCnt = sc0.loadIntBig(257);\n\tconst sc1 = sc0.loadRef().beginParse();\n\tconst _endTime = sc1.loadIntBig(257);\n\tconst _price = sc1.loadIntBig(257);\n\tconst _status = sc1.loadIntBig(257);\n\tconst sc2 = sc1.loadRef().beginParse();\n\tconst _amountCollected = sc2.loadIntBig(257);\n\treturn {\n\t\t$$type: \"LotteryInfo\" as const,\n\t\tseqno: _seqno,\n\t\tcreator: _creator,\n\t\tticketCnt: _ticketCnt,\n\t\tendTime: _endTime,\n\t\tprice: _price,\n\t\tstatus: _status,\n\t\tamountCollected: _amountCollected,\n\t};\n}\n\nexport type Withdraw = {\n\t$$type: \"Withdraw\";\n\ttarget: Address;\n};\n\nexport function storeWithdraw(src: Withdraw) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeUint(922360000, 32);\n\t\tb0.storeAddress(src.target);\n\t};\n}\n\nexport function loadWithdraw(slice: Slice) {\n\tconst sc0 = slice;\n\tif (sc0.loadUint(32) !== 922360000) {\n\t\tthrow new Error(\"Invalid prefix\");\n\t}\n\tconst _target = sc0.loadAddress();\n\treturn { $$type: \"Withdraw\" as const, target: _target };\n}\n\nexport type Lottery$Data = {\n\t$$type: \"Lottery$Data\";\n\tfactory: Address;\n\tcreator: Address;\n\tseqno: bigint;\n\tticketCnt: bigint;\n\tendTime: bigint;\n\tprice: bigint;\n\tstatus: bigint;\n\tdiscountDivisor: bigint;\n\tclaimed: Dictionary<Address, number>;\n\tfeePercent: bigint;\n\trefPercent: bigint;\n\trewardPerBracket: Dictionary<bigint, bigint>;\n\ttickets: Dictionary<bigint, Ticket>;\n\twinnerCntPerBracket: Dictionary<bigint, bigint>;\n\tamountCollected: bigint;\n\tfeeAmount: bigint;\n\tfinalNumber: bigint;\n};\n\nexport function storeLottery$Data(src: Lottery$Data) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeAddress(src.factory);\n\t\tb0.storeAddress(src.creator);\n\t\tb0.storeInt(src.seqno, 257);\n\t\tconst b1 = new Builder();\n\t\tb1.storeInt(src.ticketCnt, 257);\n\t\tb1.storeUint(src.endTime, 256);\n\t\tb1.storeUint(src.price, 256);\n\t\tb1.storeUint(src.status, 16);\n\t\tconst b2 = new Builder();\n\t\tb2.storeInt(src.discountDivisor, 257);\n\t\tb2.storeDict(\n\t\t\tsrc.claimed,\n\t\t\tDictionary.Keys.Address(),\n\t\t\tDictionary.Values.Uint(8),\n\t\t);\n\t\tb2.storeInt(src.feePercent, 257);\n\t\tb2.storeInt(src.refPercent, 257);\n\t\tb2.storeDict(\n\t\t\tsrc.rewardPerBracket,\n\t\t\tDictionary.Keys.BigInt(257),\n\t\t\tDictionary.Values.BigUint(256),\n\t\t);\n\t\tb2.storeDict(\n\t\t\tsrc.tickets,\n\t\t\tDictionary.Keys.BigInt(257),\n\t\t\tdictValueParserTicket(),\n\t\t);\n\t\tconst b3 = new Builder();\n\t\tb3.storeDict(\n\t\t\tsrc.winnerCntPerBracket,\n\t\t\tDictionary.Keys.BigInt(257),\n\t\t\tDictionary.Values.BigUint(256),\n\t\t);\n\t\tb3.storeUint(src.amountCollected, 256);\n\t\tb3.storeUint(src.feeAmount, 256);\n\t\tb3.storeUint(src.finalNumber, 32);\n\t\tb2.storeRef(b3.endCell());\n\t\tb1.storeRef(b2.endCell());\n\t\tb0.storeRef(b1.endCell());\n\t};\n}\n\nexport function loadLottery$Data(slice: Slice) {\n\tconst sc0 = slice;\n\tconst _factory = sc0.loadAddress();\n\tconst _creator = sc0.loadAddress();\n\tconst _seqno = sc0.loadIntBig(257);\n\tconst sc1 = sc0.loadRef().beginParse();\n\tconst _ticketCnt = sc1.loadIntBig(257);\n\tconst _endTime = sc1.loadUintBig(256);\n\tconst _price = sc1.loadUintBig(256);\n\tconst _status = sc1.loadUintBig(16);\n\tconst sc2 = sc1.loadRef().beginParse();\n\tconst _discountDivisor = sc2.loadIntBig(257);\n\tconst _claimed = Dictionary.load(\n\t\tDictionary.Keys.Address(),\n\t\tDictionary.Values.Uint(8),\n\t\tsc2,\n\t);\n\tconst _feePercent = sc2.loadIntBig(257);\n\tconst _refPercent = sc2.loadIntBig(257);\n\tconst _rewardPerBracket = Dictionary.load(\n\t\tDictionary.Keys.BigInt(257),\n\t\tDictionary.Values.BigUint(256),\n\t\tsc2,\n\t);\n\tconst _tickets = Dictionary.load(\n\t\tDictionary.Keys.BigInt(257),\n\t\tdictValueParserTicket(),\n\t\tsc2,\n\t);\n\tconst sc3 = sc2.loadRef().beginParse();\n\tconst _winnerCntPerBracket = Dictionary.load(\n\t\tDictionary.Keys.BigInt(257),\n\t\tDictionary.Values.BigUint(256),\n\t\tsc3,\n\t);\n\tconst _amountCollected = sc3.loadUintBig(256);\n\tconst _feeAmount = sc3.loadUintBig(256);\n\tconst _finalNumber = sc3.loadUintBig(32);\n\treturn {\n\t\t$$type: \"Lottery$Data\" as const,\n\t\tfactory: _factory,\n\t\tcreator: _creator,\n\t\tseqno: _seqno,\n\t\tticketCnt: _ticketCnt,\n\t\tendTime: _endTime,\n\t\tprice: _price,\n\t\tstatus: _status,\n\t\tdiscountDivisor: _discountDivisor,\n\t\tclaimed: _claimed,\n\t\tfeePercent: _feePercent,\n\t\trefPercent: _refPercent,\n\t\trewardPerBracket: _rewardPerBracket,\n\t\ttickets: _tickets,\n\t\twinnerCntPerBracket: _winnerCntPerBracket,\n\t\tamountCollected: _amountCollected,\n\t\tfeeAmount: _feeAmount,\n\t\tfinalNumber: _finalNumber,\n\t};\n}\n\nexport type CreateWallet = {\n\t$$type: \"CreateWallet\";\n\towner: Address;\n};\n\nexport function storeCreateWallet(src: CreateWallet) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeUint(4268690758, 32);\n\t\tb0.storeAddress(src.owner);\n\t};\n}\n\nexport function loadCreateWallet(slice: Slice) {\n\tconst sc0 = slice;\n\tif (sc0.loadUint(32) !== 4268690758) {\n\t\tthrow new Error(\"Invalid prefix\");\n\t}\n\tconst _owner = sc0.loadAddress();\n\treturn { $$type: \"CreateWallet\" as const, owner: _owner };\n}\n\nexport type Move = {\n\t$$type: \"Move\";\n\ttarget: Address;\n};\n\nexport function storeMove(src: Move) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeUint(3211350992, 32);\n\t\tb0.storeAddress(src.target);\n\t};\n}\n\nexport function loadMove(slice: Slice) {\n\tconst sc0 = slice;\n\tif (sc0.loadUint(32) !== 3211350992) {\n\t\tthrow new Error(\"Invalid prefix\");\n\t}\n\tconst _target = sc0.loadAddress();\n\treturn { $$type: \"Move\" as const, target: _target };\n}\n\nexport type ReferralWallet$Data = {\n\t$$type: \"ReferralWallet$Data\";\n\tfactory: Address;\n\towner: Address;\n\tamount: bigint;\n\tseqno: bigint;\n};\n\nexport function storeReferralWallet$Data(src: ReferralWallet$Data) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeAddress(src.factory);\n\t\tb0.storeAddress(src.owner);\n\t\tb0.storeInt(src.amount, 257);\n\t\tconst b1 = new Builder();\n\t\tb1.storeInt(src.seqno, 257);\n\t\tb0.storeRef(b1.endCell());\n\t};\n}\n\nexport function loadReferralWallet$Data(slice: Slice) {\n\tconst sc0 = slice;\n\tconst _factory = sc0.loadAddress();\n\tconst _owner = sc0.loadAddress();\n\tconst _amount = sc0.loadIntBig(257);\n\tconst sc1 = sc0.loadRef().beginParse();\n\tconst _seqno = sc1.loadIntBig(257);\n\treturn {\n\t\t$$type: \"ReferralWallet$Data\" as const,\n\t\tfactory: _factory,\n\t\towner: _owner,\n\t\tamount: _amount,\n\t\tseqno: _seqno,\n\t};\n}\n\nexport type Draw = {\n\t$$type: \"Draw\";\n\tlotteryId: bigint;\n};\n\nexport function storeDraw(src: Draw) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeUint(746428760, 32);\n\t\tb0.storeInt(src.lotteryId, 257);\n\t};\n}\n\nexport function loadDraw(slice: Slice) {\n\tconst sc0 = slice;\n\tif (sc0.loadUint(32) !== 746428760) {\n\t\tthrow new Error(\"Invalid prefix\");\n\t}\n\tconst _lotteryId = sc0.loadIntBig(257);\n\treturn { $$type: \"Draw\" as const, lotteryId: _lotteryId };\n}\n\nexport type EmergencyWithdraw = {\n\t$$type: \"EmergencyWithdraw\";\n\tlotteryId: bigint;\n};\n\nexport function storeEmergencyWithdraw(src: EmergencyWithdraw) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeUint(807739057, 32);\n\t\tb0.storeInt(src.lotteryId, 257);\n\t};\n}\n\nexport function loadEmergencyWithdraw(slice: Slice) {\n\tconst sc0 = slice;\n\tif (sc0.loadUint(32) !== 807739057) {\n\t\tthrow new Error(\"Invalid prefix\");\n\t}\n\tconst _lotteryId = sc0.loadIntBig(257);\n\treturn { $$type: \"EmergencyWithdraw\" as const, lotteryId: _lotteryId };\n}\n\nexport type LotteryFactory$Data = {\n\t$$type: \"LotteryFactory$Data\";\n\towner: Address;\n\tlotteryCnt: bigint;\n\treferrers: Dictionary<bigint, Address>;\n\treferrer_cnt: bigint;\n\twithdraw_end: bigint;\n};\n\nexport function storeLotteryFactory$Data(src: LotteryFactory$Data) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeAddress(src.owner);\n\t\tb0.storeUint(src.lotteryCnt, 256);\n\t\tb0.storeDict(\n\t\t\tsrc.referrers,\n\t\t\tDictionary.Keys.BigInt(257),\n\t\t\tDictionary.Values.Address(),\n\t\t);\n\t\tb0.storeInt(src.referrer_cnt, 257);\n\t\tconst b1 = new Builder();\n\t\tb1.storeUint(src.withdraw_end, 256);\n\t\tb0.storeRef(b1.endCell());\n\t};\n}\n\nexport function loadLotteryFactory$Data(slice: Slice) {\n\tconst sc0 = slice;\n\tconst _owner = sc0.loadAddress();\n\tconst _lotteryCnt = sc0.loadUintBig(256);\n\tconst _referrers = Dictionary.load(\n\t\tDictionary.Keys.BigInt(257),\n\t\tDictionary.Values.Address(),\n\t\tsc0,\n\t);\n\tconst _referrerCnt = sc0.loadIntBig(257);\n\tconst sc1 = sc0.loadRef().beginParse();\n\tconst _withdrawEnd = sc1.loadUintBig(256);\n\treturn {\n\t\t$$type: \"LotteryFactory$Data\" as const,\n\t\towner: _owner,\n\t\tlotteryCnt: _lotteryCnt,\n\t\treferrers: _referrers,\n\t\treferrer_cnt: _referrerCnt,\n\t\twithdraw_end: _withdrawEnd,\n\t};\n}\n\ntype LotteryFactoryInitArgs = {\n\t$$type: \"LotteryFactory_init_args\";\n};\n\nfunction initLotteryFactoryInitArgs(_src: LotteryFactoryInitArgs) {\n\treturn (_builder: Builder) => {};\n}\n\nasync function lotteryFactoryInit() {\n\tconst __code = Cell.fromBase64(\n\t\t\"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\",\n\t);\n\tconst __system = Cell.fromBase64(\n\t\t\"\",\n\t);\n\tconst builder = beginCell();\n\tbuilder.storeRef(__system);\n\tbuilder.storeUint(0, 1);\n\tinitLotteryFactoryInitArgs({ $$type: \"LotteryFactory_init_args\" })(builder);\n\tconst __data = builder.endCell();\n\treturn { code: __code, data: __data };\n}\n\nconst lotteryFactoryErrors: { [key: number]: { message: string } } = {\n\t2: { message: \"Stack underflow\" },\n\t3: { message: \"Stack overflow\" },\n\t4: { message: \"Integer overflow\" },\n\t5: { message: \"Integer out of expected range\" },\n\t6: { message: \"Invalid opcode\" },\n\t7: { message: \"Type check error\" },\n\t8: { message: \"Cell overflow\" },\n\t9: { message: \"Cell underflow\" },\n\t10: { message: \"Dictionary error\" },\n\t11: { message: `'Unknown' error` },\n\t12: { message: \"Fatal error\" },\n\t13: { message: \"Out of gas error\" },\n\t14: { message: \"Virtualization error\" },\n\t32: { message: \"Action list is invalid\" },\n\t33: { message: \"Action list is too long\" },\n\t34: { message: \"Action is invalid or not supported\" },\n\t35: { message: \"Invalid source address in outbound message\" },\n\t36: { message: \"Invalid destination address in outbound message\" },\n\t37: { message: \"Not enough TON\" },\n\t38: { message: \"Not enough extra-currencies\" },\n\t39: { message: \"Outbound message does not fit into a cell after rewriting\" },\n\t40: { message: \"Cannot process a message\" },\n\t41: { message: \"Library reference is null\" },\n\t42: { message: \"Library change action error\" },\n\t43: {\n\t\tmessage:\n\t\t\t\"Exceeded maximum number of cells in the library or the maximum depth of the Merkle tree\",\n\t},\n\t50: { message: \"Account state size exceeded limits\" },\n\t128: { message: \"Null reference exception\" },\n\t129: { message: \"Invalid serialization prefix\" },\n\t130: { message: \"Invalid incoming message\" },\n\t131: { message: \"Constraints error\" },\n\t132: { message: \"Access denied\" },\n\t133: { message: \"Contract stopped\" },\n\t134: { message: \"Invalid argument\" },\n\t135: { message: \"Code of a contract was not found\" },\n\t136: { message: \"Invalid address\" },\n\t137: { message: \"Masterchain support is not enabled for this contract\" },\n\t5555: { message: \"Lottery is not active\" },\n\t7825: { message: \"Not enough Ton\" },\n\t24518: { message: \"Lottery not close\" },\n\t37690: { message: \"Lottery is over\" },\n\t39647: { message: \"Access is denied\" },\n\t42504: { message: \"Already claimed\" },\n\t49030: { message: \"Too many tickets\" },\n\t49671: { message: \"Lottery not claimable\" },\n\t50970: { message: \"No ticket specified\" },\n\t51322: { message: \"You are not creator\" },\n\t54634: { message: \"You are not owner\" },\n\t55607: { message: \"You are not factory\" },\n};\n\nconst lotteryFactoryTypes: ABIType[] = [\n\t{\n\t\tname: \"StateInit\",\n\t\theader: null,\n\t\tfields: [\n\t\t\t{ name: \"code\", type: { kind: \"simple\", type: \"cell\", optional: false } },\n\t\t\t{ name: \"data\", type: { kind: \"simple\", type: \"cell\", optional: false } },\n\t\t],\n\t},\n\t{\n\t\tname: \"StdAddress\",\n\t\theader: null,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"workchain\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 8 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"address\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 256 },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"VarAddress\",\n\t\theader: null,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"workchain\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 32 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"address\",\n\t\t\t\ttype: { kind: \"simple\", type: \"slice\", optional: false },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"Context\",\n\t\theader: null,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"bounced\",\n\t\t\t\ttype: { kind: \"simple\", type: \"bool\", optional: false },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"sender\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"value\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{ name: \"raw\", type: { kind: \"simple\", type: \"slice\", optional: false } },\n\t\t],\n\t},\n\t{\n\t\tname: \"SendParameters\",\n\t\theader: null,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"bounce\",\n\t\t\t\ttype: { kind: \"simple\", type: \"bool\", optional: false },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"to\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"value\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"mode\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{ name: \"body\", type: { kind: \"simple\", type: \"cell\", optional: true } },\n\t\t\t{ name: \"code\", type: { kind: \"simple\", type: \"cell\", optional: true } },\n\t\t\t{ name: \"data\", type: { kind: \"simple\", type: \"cell\", optional: true } },\n\t\t],\n\t},\n\t{\n\t\tname: \"Deploy\",\n\t\theader: 2490013878,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"queryId\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 64 },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"DeployOk\",\n\t\theader: 2952335191,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"queryId\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 64 },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"FactoryDeploy\",\n\t\theader: 1829761339,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"queryId\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 64 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"cashback\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"ChangeOwner\",\n\t\theader: 2174598809,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"queryId\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 64 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"newOwner\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"ChangeOwnerOk\",\n\t\theader: 846932810,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"queryId\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 64 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"newOwner\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"Ticket\",\n\t\theader: null,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"number\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 32 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"owner\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"CreateLottery\",\n\t\theader: 1817793233,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"creator\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"price\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"endTime\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"discountDivisor\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"BuyTicket\",\n\t\theader: 3310573309,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"recipient\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"amount\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 32 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"ticketNumbers\",\n\t\t\t\ttype: {\n\t\t\t\t\tkind: \"dict\",\n\t\t\t\t\tkey: \"uint\",\n\t\t\t\t\tkeyFormat: 32,\n\t\t\t\t\tvalue: \"uint\",\n\t\t\t\t\tvalueFormat: 32,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"refWallet\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: true },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"ClaimTickets\",\n\t\theader: 2609204369,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"ticketIds\",\n\t\t\t\ttype: {\n\t\t\t\t\tkind: \"dict\",\n\t\t\t\t\tkey: \"uint\",\n\t\t\t\t\tkeyFormat: 32,\n\t\t\t\t\tvalue: \"uint\",\n\t\t\t\t\tvalueFormat: 32,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"ticketLength\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 32 },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"LotteryInfo\",\n\t\theader: null,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"seqno\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"creator\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"ticketCnt\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"endTime\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"price\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"status\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"amountCollected\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"Withdraw\",\n\t\theader: 922360000,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"target\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"Lottery$Data\",\n\t\theader: null,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"factory\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"creator\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"seqno\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"ticketCnt\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"endTime\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 256 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"price\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 256 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"status\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 16 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"discountDivisor\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"claimed\",\n\t\t\t\ttype: { kind: \"dict\", key: \"address\", value: \"uint\", valueFormat: 8 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"feePercent\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"refPercent\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"rewardPerBracket\",\n\t\t\t\ttype: { kind: \"dict\", key: \"int\", value: \"uint\", valueFormat: 256 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"tickets\",\n\t\t\t\ttype: { kind: \"dict\", key: \"int\", value: \"Ticket\", valueFormat: \"ref\" },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"winnerCntPerBracket\",\n\t\t\t\ttype: { kind: \"dict\", key: \"int\", value: \"uint\", valueFormat: 256 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"amountCollected\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 256 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"feeAmount\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 256 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"finalNumber\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 32 },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"CreateWallet\",\n\t\theader: 4268690758,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"owner\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"Move\",\n\t\theader: 3211350992,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"target\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"ReferralWallet$Data\",\n\t\theader: null,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"factory\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"owner\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"amount\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"seqno\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"Draw\",\n\t\theader: 746428760,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"lotteryId\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"EmergencyWithdraw\",\n\t\theader: 807739057,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"lotteryId\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"LotteryFactory$Data\",\n\t\theader: null,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"owner\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"lotteryCnt\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 256 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"referrers\",\n\t\t\t\ttype: { kind: \"dict\", key: \"int\", value: \"address\" },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"referrer_cnt\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"withdraw_end\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 256 },\n\t\t\t},\n\t\t],\n\t},\n];\n\nconst lotteryFactoryGetters: ABIGetter[] = [\n\t{\n\t\tname: \"lotteryCnt\",\n\t\targuments: [],\n\t\treturnType: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t},\n\t{\n\t\tname: \"lotteryAddress\",\n\t\targuments: [\n\t\t\t{\n\t\t\t\tname: \"seqno\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t],\n\t\treturnType: { kind: \"simple\", type: \"address\", optional: false },\n\t},\n\t{\n\t\tname: \"referrerWalletAddress\",\n\t\targuments: [\n\t\t\t{\n\t\t\t\tname: \"user\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t],\n\t\treturnType: { kind: \"simple\", type: \"address\", optional: false },\n\t},\n\t{\n\t\tname: \"reffererNumber\",\n\t\targuments: [\n\t\t\t{\n\t\t\t\tname: \"user\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t],\n\t\treturnType: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t},\n\t{\n\t\tname: \"owner\",\n\t\targuments: [],\n\t\treturnType: { kind: \"simple\", type: \"address\", optional: false },\n\t},\n];\n\nexport const LotteryFactory_getterMapping: { [key: string]: string } = {\n\tlotteryCnt: \"getLotteryCnt\",\n\tlotteryAddress: \"getLotteryAddress\",\n\treferrerWalletAddress: \"getReferrerWalletAddress\",\n\treffererNumber: \"getReffererNumber\",\n\towner: \"getOwner\",\n};\n\nconst lotteryFactoryReceivers: ABIReceiver[] = [\n\t{ receiver: \"internal\", message: { kind: \"typed\", type: \"CreateLottery\" } },\n\t{ receiver: \"internal\", message: { kind: \"typed\", type: \"Draw\" } },\n\t{ receiver: \"internal\", message: { kind: \"text\", text: \"createRefWallet\" } },\n\t{ receiver: \"internal\", message: { kind: \"text\", text: \"withdraw_ref\" } },\n\t{\n\t\treceiver: \"internal\",\n\t\tmessage: { kind: \"typed\", type: \"EmergencyWithdraw\" },\n\t},\n\t{ receiver: \"internal\", message: { kind: \"typed\", type: \"Deploy\" } },\n];\n\nexport class LotteryFactory implements Contract {\n\tstatic async init() {\n\t\treturn await lotteryFactoryInit();\n\t}\n\n\tstatic async fromInit() {\n\t\tconst init = await lotteryFactoryInit();\n\t\tconst address = contractAddress(0, init);\n\t\treturn new LotteryFactory(address, init);\n\t}\n\n\tstatic fromAddress(address: Address) {\n\t\treturn new LotteryFactory(address);\n\t}\n\n\treadonly address: Address;\n\treadonly init?: { code: Cell; data: Cell };\n\treadonly abi: ContractABI = {\n\t\ttypes: lotteryFactoryTypes,\n\t\tgetters: lotteryFactoryGetters,\n\t\treceivers: lotteryFactoryReceivers,\n\t\terrors: lotteryFactoryErrors,\n\t};\n\n\tprivate constructor(address: Address, init?: { code: Cell; data: Cell }) {\n\t\tthis.address = address;\n\t\tthis.init = init;\n\t}\n\n\tasync send(\n\t\tprovider: ContractProvider,\n\t\tvia: Sender,\n\t\targs: { value: bigint; bounce?: boolean | null | undefined },\n\t\tmessage:\n\t\t\t| CreateLottery\n\t\t\t| Draw\n\t\t\t| \"createRefWallet\"\n\t\t\t| \"withdraw_ref\"\n\t\t\t| EmergencyWithdraw\n\t\t\t| Deploy,\n\t) {\n\t\tlet body: Cell | null = null;\n\t\tif (\n\t\t\tmessage &&\n\t\t\ttypeof message === \"object\" &&\n\t\t\t!(message instanceof Slice) &&\n\t\t\tmessage.$$type === \"CreateLottery\"\n\t\t) {\n\t\t\tbody = beginCell().store(storeCreateLottery(message)).endCell();\n\t\t}\n\t\tif (\n\t\t\tmessage &&\n\t\t\ttypeof message === \"object\" &&\n\t\t\t!(message instanceof Slice) &&\n\t\t\tmessage.$$type === \"Draw\"\n\t\t) {\n\t\t\tbody = beginCell().store(storeDraw(message)).endCell();\n\t\t}\n\t\tif (message === \"createRefWallet\") {\n\t\t\tbody = beginCell().storeUint(0, 32).storeStringTail(message).endCell();\n\t\t}\n\t\tif (message === \"withdraw_ref\") {\n\t\t\tbody = beginCell().storeUint(0, 32).storeStringTail(message).endCell();\n\t\t}\n\t\tif (\n\t\t\tmessage &&\n\t\t\ttypeof message === \"object\" &&\n\t\t\t!(message instanceof Slice) &&\n\t\t\tmessage.$$type === \"EmergencyWithdraw\"\n\t\t) {\n\t\t\tbody = beginCell().store(storeEmergencyWithdraw(message)).endCell();\n\t\t}\n\t\tif (\n\t\t\tmessage &&\n\t\t\ttypeof message === \"object\" &&\n\t\t\t!(message instanceof Slice) &&\n\t\t\tmessage.$$type === \"Deploy\"\n\t\t) {\n\t\t\tbody = beginCell().store(storeDeploy(message)).endCell();\n\t\t}\n\t\tif (body === null) {\n\t\t\tthrow new Error(\"Invalid message type\");\n\t\t}\n\n\t\tawait provider.internal(via, { ...args, body: body });\n\t}\n\n\tasync getLotteryCnt(provider: ContractProvider) {\n\t\tconst builder = new TupleBuilder();\n\t\tconst source = (await provider.get(\"lotteryCnt\", builder.build())).stack;\n\t\tconst result = source.readBigNumber();\n\t\treturn result;\n\t}\n\n\tasync getLotteryAddress(provider: ContractProvider, seqno: bigint) {\n\t\tconst builder = new TupleBuilder();\n\t\tbuilder.writeNumber(seqno);\n\t\tconst source = (await provider.get(\"lotteryAddress\", builder.build()))\n\t\t\t.stack;\n\t\tconst result = source.readAddress();\n\t\treturn result;\n\t}\n\n\tasync getReferrerWalletAddress(provider: ContractProvider, user: Address) {\n\t\tconst builder = new TupleBuilder();\n\t\tbuilder.writeAddress(user);\n\t\tconst source = (\n\t\t\tawait provider.get(\"referrerWalletAddress\", builder.build())\n\t\t).stack;\n\t\tconst result = source.readAddress();\n\t\treturn result;\n\t}\n\n\tasync getReffererNumber(provider: ContractProvider, user: Address) {\n\t\tconst builder = new TupleBuilder();\n\t\tbuilder.writeAddress(user);\n\t\tconst source = (await provider.get(\"reffererNumber\", builder.build()))\n\t\t\t.stack;\n\t\tconst result = source.readBigNumber();\n\t\treturn result;\n\t}\n\n\tasync getOwner(provider: ContractProvider) {\n\t\tconst builder = new TupleBuilder();\n\t\tconst source = (await provider.get(\"owner\", builder.build())).stack;\n\t\tconst result = source.readAddress();\n\t\treturn result;\n\t}\n}\n","import {\n\ttype ABIGetter,\n\ttype ABIReceiver,\n\ttype ABIType,\n\ttype Address,\n\tBuilder,\n\tCell,\n\ttype Contract,\n\ttype ContractABI,\n\ttype ContractProvider,\n\tDictionary,\n\ttype DictionaryValue,\n\ttype Sender,\n\tSlice,\n\tTupleBuilder,\n\tbeginCell,\n\tcontractAddress,\n} from \"@ton/core\";\n\nexport type StateInit = {\n\t$$type: \"StateInit\";\n\tcode: Cell;\n\tdata: Cell;\n};\n\nexport function storeStateInit(src: StateInit) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeRef(src.code);\n\t\tb0.storeRef(src.data);\n\t};\n}\n\nexport function loadStateInit(slice: Slice) {\n\tconst sc0 = slice;\n\tconst _code = sc0.loadRef();\n\tconst _data = sc0.loadRef();\n\treturn { $$type: \"StateInit\" as const, code: _code, data: _data };\n}\n\nexport type StdAddress = {\n\t$$type: \"StdAddress\";\n\tworkchain: bigint;\n\taddress: bigint;\n};\n\nexport function storeStdAddress(src: StdAddress) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeInt(src.workchain, 8);\n\t\tb0.storeUint(src.address, 256);\n\t};\n}\n\nexport function loadStdAddress(slice: Slice) {\n\tconst sc0 = slice;\n\tconst _workchain = sc0.loadIntBig(8);\n\tconst _address = sc0.loadUintBig(256);\n\treturn {\n\t\t$$type: \"StdAddress\" as const,\n\t\tworkchain: _workchain,\n\t\taddress: _address,\n\t};\n}\n\nexport type VarAddress = {\n\t$$type: \"VarAddress\";\n\tworkchain: bigint;\n\taddress: Slice;\n};\n\nexport function storeVarAddress(src: VarAddress) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeInt(src.workchain, 32);\n\t\tb0.storeRef(src.address.asCell());\n\t};\n}\n\nexport function loadVarAddress(slice: Slice) {\n\tconst sc0 = slice;\n\tconst _workchain = sc0.loadIntBig(32);\n\tconst _address = sc0.loadRef().asSlice();\n\treturn {\n\t\t$$type: \"VarAddress\" as const,\n\t\tworkchain: _workchain,\n\t\taddress: _address,\n\t};\n}\n\nexport type Context = {\n\t$$type: \"Context\";\n\tbounced: boolean;\n\tsender: Address;\n\tvalue: bigint;\n\traw: Slice;\n};\n\nexport function storeContext(src: Context) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeBit(src.bounced);\n\t\tb0.storeAddress(src.sender);\n\t\tb0.storeInt(src.value, 257);\n\t\tb0.storeRef(src.raw.asCell());\n\t};\n}\n\nexport function loadContext(slice: Slice) {\n\tconst sc0 = slice;\n\tconst _bounced = sc0.loadBit();\n\tconst _sender = sc0.loadAddress();\n\tconst _value = sc0.loadIntBig(257);\n\tconst _raw = sc0.loadRef().asSlice();\n\treturn {\n\t\t$$type: \"Context\" as const,\n\t\tbounced: _bounced,\n\t\tsender: _sender,\n\t\tvalue: _value,\n\t\traw: _raw,\n\t};\n}\n\nexport type SendParameters = {\n\t$$type: \"SendParameters\";\n\tbounce: boolean;\n\tto: Address;\n\tvalue: bigint;\n\tmode: bigint;\n\tbody: Cell | null;\n\tcode: Cell | null;\n\tdata: Cell | null;\n};\n\nexport function storeSendParameters(src: SendParameters) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeBit(src.bounce);\n\t\tb0.storeAddress(src.to);\n\t\tb0.storeInt(src.value, 257);\n\t\tb0.storeInt(src.mode, 257);\n\t\tif (src.body !== null && src.body !== undefined) {\n\t\t\tb0.storeBit(true).storeRef(src.body);\n\t\t} else {\n\t\t\tb0.storeBit(false);\n\t\t}\n\t\tif (src.code !== null && src.code !== undefined) {\n\t\t\tb0.storeBit(true).storeRef(src.code);\n\t\t} else {\n\t\t\tb0.storeBit(false);\n\t\t}\n\t\tif (src.data !== null && src.data !== undefined) {\n\t\t\tb0.storeBit(true).storeRef(src.data);\n\t\t} else {\n\t\t\tb0.storeBit(false);\n\t\t}\n\t};\n}\n\nexport function loadSendParameters(slice: Slice) {\n\tconst sc0 = slice;\n\tconst _bounce = sc0.loadBit();\n\tconst _to = sc0.loadAddress();\n\tconst _value = sc0.loadIntBig(257);\n\tconst _mode = sc0.loadIntBig(257);\n\tconst _body = sc0.loadBit() ? sc0.loadRef() : null;\n\tconst _code = sc0.loadBit() ? sc0.loadRef() : null;\n\tconst _data = sc0.loadBit() ? sc0.loadRef() : null;\n\treturn {\n\t\t$$type: \"SendParameters\" as const,\n\t\tbounce: _bounce,\n\t\tto: _to,\n\t\tvalue: _value,\n\t\tmode: _mode,\n\t\tbody: _body,\n\t\tcode: _code,\n\t\tdata: _data,\n\t};\n}\n\nexport type Deploy = {\n\t$$type: \"Deploy\";\n\tqueryId: bigint;\n};\n\nexport function storeDeploy(src: Deploy) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeUint(2490013878, 32);\n\t\tb0.storeUint(src.queryId, 64);\n\t};\n}\n\nexport function loadDeploy(slice: Slice) {\n\tconst sc0 = slice;\n\tif (sc0.loadUint(32) !== 2490013878) {\n\t\tthrow new Error(\"Invalid prefix\");\n\t}\n\tconst _queryId = sc0.loadUintBig(64);\n\treturn { $$type: \"Deploy\" as const, queryId: _queryId };\n}\n\nexport type DeployOk = {\n\t$$type: \"DeployOk\";\n\tqueryId: bigint;\n};\n\nexport function storeDeployOk(src: DeployOk) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeUint(2952335191, 32);\n\t\tb0.storeUint(src.queryId, 64);\n\t};\n}\n\nexport function loadDeployOk(slice: Slice) {\n\tconst sc0 = slice;\n\tif (sc0.loadUint(32) !== 2952335191) {\n\t\tthrow new Error(\"Invalid prefix\");\n\t}\n\tconst _queryId = sc0.loadUintBig(64);\n\treturn { $$type: \"DeployOk\" as const, queryId: _queryId };\n}\n\nexport type FactoryDeploy = {\n\t$$type: \"FactoryDeploy\";\n\tqueryId: bigint;\n\tcashback: Address;\n};\n\nexport function storeFactoryDeploy(src: FactoryDeploy) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeUint(1829761339, 32);\n\t\tb0.storeUint(src.queryId, 64);\n\t\tb0.storeAddress(src.cashback);\n\t};\n}\n\nexport function loadFactoryDeploy(slice: Slice) {\n\tconst sc0 = slice;\n\tif (sc0.loadUint(32) !== 1829761339) {\n\t\tthrow new Error(\"Invalid prefix\");\n\t}\n\tconst _queryId = sc0.loadUintBig(64);\n\tconst _cashback = sc0.loadAddress();\n\treturn {\n\t\t$$type: \"FactoryDeploy\" as const,\n\t\tqueryId: _queryId,\n\t\tcashback: _cashback,\n\t};\n}\n\nexport type ChangeOwner = {\n\t$$type: \"ChangeOwner\";\n\tqueryId: bigint;\n\tnewOwner: Address;\n};\n\nexport function storeChangeOwner(src: ChangeOwner) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeUint(2174598809, 32);\n\t\tb0.storeUint(src.queryId, 64);\n\t\tb0.storeAddress(src.newOwner);\n\t};\n}\n\nexport function loadChangeOwner(slice: Slice) {\n\tconst sc0 = slice;\n\tif (sc0.loadUint(32) !== 2174598809) {\n\t\tthrow new Error(\"Invalid prefix\");\n\t}\n\tconst _queryId = sc0.loadUintBig(64);\n\tconst _newOwner = sc0.loadAddress();\n\treturn {\n\t\t$$type: \"ChangeOwner\" as const,\n\t\tqueryId: _queryId,\n\t\tnewOwner: _newOwner,\n\t};\n}\n\nexport type ChangeOwnerOk = {\n\t$$type: \"ChangeOwnerOk\";\n\tqueryId: bigint;\n\tnewOwner: Address;\n};\n\nexport function storeChangeOwnerOk(src: ChangeOwnerOk) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeUint(846932810, 32);\n\t\tb0.storeUint(src.queryId, 64);\n\t\tb0.storeAddress(src.newOwner);\n\t};\n}\n\nexport function loadChangeOwnerOk(slice: Slice) {\n\tconst sc0 = slice;\n\tif (sc0.loadUint(32) !== 846932810) {\n\t\tthrow new Error(\"Invalid prefix\");\n\t}\n\tconst _queryId = sc0.loadUintBig(64);\n\tconst _newOwner = sc0.loadAddress();\n\treturn {\n\t\t$$type: \"ChangeOwnerOk\" as const,\n\t\tqueryId: _queryId,\n\t\tnewOwner: _newOwner,\n\t};\n}\n\nexport type Ticket = {\n\t$$type: \"Ticket\";\n\tnumber: bigint;\n\towner: Address;\n};\n\nexport function storeTicket(src: Ticket) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeUint(src.number, 32);\n\t\tb0.storeAddress(src.owner);\n\t};\n}\n\nexport function loadTicket(slice: Slice) {\n\tconst sc0 = slice;\n\tconst _number = sc0.loadUintBig(32);\n\tconst _owner = sc0.loadAddress();\n\treturn { $$type: \"Ticket\" as const, number: _number, owner: _owner };\n}\n\nfunction dictValueParserTicket(): DictionaryValue<Ticket> {\n\treturn {\n\t\tserialize: (src, builder) => {\n\t\t\tbuilder.storeRef(beginCell().store(storeTicket(src)).endCell());\n\t\t},\n\t\tparse: (src) => {\n\t\t\treturn loadTicket(src.loadRef().beginParse());\n\t\t},\n\t};\n}\n\nexport type CreateLottery = {\n\t$$type: \"CreateLottery\";\n\tcreator: Address;\n\tprice: bigint;\n\tendTime: bigint;\n\tdiscountDivisor: bigint;\n};\n\nexport function storeCreateLottery(src: CreateLottery) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeUint(1817793233, 32);\n\t\tb0.storeAddress(src.creator);\n\t\tb0.storeInt(src.price, 257);\n\t\tb0.storeInt(src.endTime, 257);\n\t\tconst b1 = new Builder();\n\t\tb1.storeInt(src.discountDivisor, 257);\n\t\tb0.storeRef(b1.endCell());\n\t};\n}\n\nexport function loadCreateLottery(slice: Slice) {\n\tconst sc0 = slice;\n\tif (sc0.loadUint(32) !== 1817793233) {\n\t\tthrow new Error(\"Invalid prefix\");\n\t}\n\tconst _creator = sc0.loadAddress();\n\tconst _price = sc0.loadIntBig(257);\n\tconst _endTime = sc0.loadIntBig(257);\n\tconst sc1 = sc0.loadRef().beginParse();\n\tconst _discountDivisor = sc1.loadIntBig(257);\n\treturn {\n\t\t$$type: \"CreateLottery\" as const,\n\t\tcreator: _creator,\n\t\tprice: _price,\n\t\tendTime: _endTime,\n\t\tdiscountDivisor: _discountDivisor,\n\t};\n}\n\nexport type BuyTicket = {\n\t$$type: \"BuyTicket\";\n\trecipient: Address;\n\tamount: bigint;\n\tticketNumbers: Dictionary<number, number>;\n\trefWallet: Address | null;\n};\n\nexport function storeBuyTicket(src: BuyTicket) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeUint(3310573309, 32);\n\t\tb0.storeAddress(src.recipient);\n\t\tb0.storeUint(src.amount, 32);\n\t\tb0.storeDict(\n\t\t\tsrc.ticketNumbers,\n\t\t\tDictionary.Keys.Uint(32),\n\t\t\tDictionary.Values.Uint(32),\n\t\t);\n\t\tb0.storeAddress(src.refWallet);\n\t};\n}\n\nexport function loadBuyTicket(slice: Slice) {\n\tconst sc0 = slice;\n\tif (sc0.loadUint(32) !== 3310573309) {\n\t\tthrow new Error(\"Invalid prefix\");\n\t}\n\tconst _recipient = sc0.loadAddress();\n\tconst _amount = sc0.loadUintBig(32);\n\tconst _ticketNumbers = Dictionary.load(\n\t\tDictionary.Keys.Uint(32),\n\t\tDictionary.Values.Uint(32),\n\t\tsc0,\n\t);\n\tconst _refWallet = sc0.loadMaybeAddress();\n\treturn {\n\t\t$$type: \"BuyTicket\" as const,\n\t\trecipient: _recipient,\n\t\tamount: _amount,\n\t\tticketNumbers: _ticketNumbers,\n\t\trefWallet: _refWallet,\n\t};\n}\n\nexport type ClaimTickets = {\n\t$$type: \"ClaimTickets\";\n\tticketIds: Dictionary<number, number>;\n\tticketLength: bigint;\n};\n\nexport function storeClaimTickets(src: ClaimTickets) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeUint(2609204369, 32);\n\t\tb0.storeDict(\n\t\t\tsrc.ticketIds,\n\t\t\tDictionary.Keys.Uint(32),\n\t\t\tDictionary.Values.Uint(32),\n\t\t);\n\t\tb0.storeUint(src.ticketLength, 32);\n\t};\n}\n\nexport function loadClaimTickets(slice: Slice) {\n\tconst sc0 = slice;\n\tif (sc0.loadUint(32) !== 2609204369) {\n\t\tthrow new Error(\"Invalid prefix\");\n\t}\n\tconst _ticketIds = Dictionary.load(\n\t\tDictionary.Keys.Uint(32),\n\t\tDictionary.Values.Uint(32),\n\t\tsc0,\n\t);\n\tconst _ticketLength = sc0.loadUintBig(32);\n\treturn {\n\t\t$$type: \"ClaimTickets\" as const,\n\t\tticketIds: _ticketIds,\n\t\tticketLength: _ticketLength,\n\t};\n}\n\nexport type LotteryInfo = {\n\t$$type: \"LotteryInfo\";\n\tseqno: bigint;\n\tcreator: Address;\n\tticketCnt: bigint;\n\tendTime: bigint;\n\tprice: bigint;\n\tstatus: bigint;\n\tamountCollected: bigint;\n};\n\nexport function storeLotteryInfo(src: LotteryInfo) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeInt(src.seqno, 257);\n\t\tb0.storeAddress(src.creator);\n\t\tb0.storeInt(src.ticketCnt, 257);\n\t\tconst b1 = new Builder();\n\t\tb1.storeInt(src.endTime, 257);\n\t\tb1.storeInt(src.price, 257);\n\t\tb1.storeInt(src.status, 257);\n\t\tconst b2 = new Builder();\n\t\tb2.storeInt(src.amountCollected, 257);\n\t\tb1.storeRef(b2.endCell());\n\t\tb0.storeRef(b1.endCell());\n\t};\n}\n\nexport function loadLotteryInfo(slice: Slice) {\n\tconst sc0 = slice;\n\tconst _seqno = sc0.loadIntBig(257);\n\tconst _creator = sc0.loadAddress();\n\tconst _ticketCnt = sc0.loadIntBig(257);\n\tconst sc1 = sc0.loadRef().beginParse();\n\tconst _endTime = sc1.loadIntBig(257);\n\tconst _price = sc1.loadIntBig(257);\n\tconst _status = sc1.loadIntBig(257);\n\tconst sc2 = sc1.loadRef().beginParse();\n\tconst _amountCollected = sc2.loadIntBig(257);\n\treturn {\n\t\t$$type: \"LotteryInfo\" as const,\n\t\tseqno: _seqno,\n\t\tcreator: _creator,\n\t\tticketCnt: _ticketCnt,\n\t\tendTime: _endTime,\n\t\tprice: _price,\n\t\tstatus: _status,\n\t\tamountCollected: _amountCollected,\n\t};\n}\n\nexport type Withdraw = {\n\t$$type: \"Withdraw\";\n\ttarget: Address;\n};\n\nexport function storeWithdraw(src: Withdraw) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeUint(922360000, 32);\n\t\tb0.storeAddress(src.target);\n\t};\n}\n\nexport function loadWithdraw(slice: Slice) {\n\tconst sc0 = slice;\n\tif (sc0.loadUint(32) !== 922360000) {\n\t\tthrow new Error(\"Invalid prefix\");\n\t}\n\tconst _target = sc0.loadAddress();\n\treturn { $$type: \"Withdraw\" as const, target: _target };\n}\n\nexport type Lottery$Data = {\n\t$$type: \"Lottery$Data\";\n\tfactory: Address;\n\tcreator: Address;\n\tseqno: bigint;\n\tticketCnt: bigint;\n\tendTime: bigint;\n\tprice: bigint;\n\tstatus: bigint;\n\tdiscountDivisor: bigint;\n\tclaimed: Dictionary<Address, number>;\n\tfeePercent: bigint;\n\trefPercent: bigint;\n\trewardPerBracket: Dictionary<bigint, bigint>;\n\ttickets: Dictionary<bigint, Ticket>;\n\twinnerCntPerBracket: Dictionary<bigint, bigint>;\n\tamountCollected: bigint;\n\tfeeAmount: bigint;\n\tfinalNumber: bigint;\n};\n\nexport function storeLottery$Data(src: Lottery$Data) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeAddress(src.factory);\n\t\tb0.storeAddress(src.creator);\n\t\tb0.storeInt(src.seqno, 257);\n\t\tconst b1 = new Builder();\n\t\tb1.storeInt(src.ticketCnt, 257);\n\t\tb1.storeUint(src.endTime, 256);\n\t\tb1.storeUint(src.price, 256);\n\t\tb1.storeUint(src.status, 16);\n\t\tconst b2 = new Builder();\n\t\tb2.storeInt(src.discountDivisor, 257);\n\t\tb2.storeDict(\n\t\t\tsrc.claimed,\n\t\t\tDictionary.Keys.Address(),\n\t\t\tDictionary.Values.Uint(8),\n\t\t);\n\t\tb2.storeInt(src.feePercent, 257);\n\t\tb2.storeInt(src.refPercent, 257);\n\t\tb2.storeDict(\n\t\t\tsrc.rewardPerBracket,\n\t\t\tDictionary.Keys.BigInt(257),\n\t\t\tDictionary.Values.BigUint(256),\n\t\t);\n\t\tb2.storeDict(\n\t\t\tsrc.tickets,\n\t\t\tDictionary.Keys.BigInt(257),\n\t\t\tdictValueParserTicket(),\n\t\t);\n\t\tconst b3 = new Builder();\n\t\tb3.storeDict(\n\t\t\tsrc.winnerCntPerBracket,\n\t\t\tDictionary.Keys.BigInt(257),\n\t\t\tDictionary.Values.BigUint(256),\n\t\t);\n\t\tb3.storeUint(src.amountCollected, 256);\n\t\tb3.storeUint(src.feeAmount, 256);\n\t\tb3.storeUint(src.finalNumber, 32);\n\t\tb2.storeRef(b3.endCell());\n\t\tb1.storeRef(b2.endCell());\n\t\tb0.storeRef(b1.endCell());\n\t};\n}\n\nexport function loadLottery$Data(slice: Slice) {\n\tconst sc0 = slice;\n\tconst _factory = sc0.loadAddress();\n\tconst _creator = sc0.loadAddress();\n\tconst _seqno = sc0.loadIntBig(257);\n\tconst sc1 = sc0.loadRef().beginParse();\n\tconst _ticketCnt = sc1.loadIntBig(257);\n\tconst _endTime = sc1.loadUintBig(256);\n\tconst _price = sc1.loadUintBig(256);\n\tconst _status = sc1.loadUintBig(16);\n\tconst sc2 = sc1.loadRef().beginParse();\n\tconst _discountDivisor = sc2.loadIntBig(257);\n\tconst _claimed = Dictionary.load(\n\t\tDictionary.Keys.Address(),\n\t\tDictionary.Values.Uint(8),\n\t\tsc2,\n\t);\n\tconst _feePercent = sc2.loadIntBig(257);\n\tconst _refPercent = sc2.loadIntBig(257);\n\tconst _rewardPerBracket = Dictionary.load(\n\t\tDictionary.Keys.BigInt(257),\n\t\tDictionary.Values.BigUint(256),\n\t\tsc2,\n\t);\n\tconst _tickets = Dictionary.load(\n\t\tDictionary.Keys.BigInt(257),\n\t\tdictValueParserTicket(),\n\t\tsc2,\n\t);\n\tconst sc3 = sc2.loadRef().beginParse();\n\tconst _winnerCntPerBracket = Dictionary.load(\n\t\tDictionary.Keys.BigInt(257),\n\t\tDictionary.Values.BigUint(256),\n\t\tsc3,\n\t);\n\tconst _amountCollected = sc3.loadUintBig(256);\n\tconst _feeAmount = sc3.loadUintBig(256);\n\tconst _finalNumber = sc3.loadUintBig(32);\n\treturn {\n\t\t$$type: \"Lottery$Data\" as const,\n\t\tfactory: _factory,\n\t\tcreator: _creator,\n\t\tseqno: _seqno,\n\t\tticketCnt: _ticketCnt,\n\t\tendTime: _endTime,\n\t\tprice: _price,\n\t\tstatus: _status,\n\t\tdiscountDivisor: _discountDivisor,\n\t\tclaimed: _claimed,\n\t\tfeePercent: _feePercent,\n\t\trefPercent: _refPercent,\n\t\trewardPerBracket: _rewardPerBracket,\n\t\ttickets: _tickets,\n\t\twinnerCntPerBracket: _winnerCntPerBracket,\n\t\tamountCollected: _amountCollected,\n\t\tfeeAmount: _feeAmount,\n\t\tfinalNumber: _finalNumber,\n\t};\n}\n\nexport type CreateWallet = {\n\t$$type: \"CreateWallet\";\n\towner: Address;\n};\n\nexport function storeCreateWallet(src: CreateWallet) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeUint(4268690758, 32);\n\t\tb0.storeAddress(src.owner);\n\t};\n}\n\nexport function loadCreateWallet(slice: Slice) {\n\tconst sc0 = slice;\n\tif (sc0.loadUint(32) !== 4268690758) {\n\t\tthrow new Error(\"Invalid prefix\");\n\t}\n\tconst _owner = sc0.loadAddress();\n\treturn { $$type: \"CreateWallet\" as const, owner: _owner };\n}\n\nexport type Move = {\n\t$$type: \"Move\";\n\ttarget: Address;\n};\n\nexport function storeMove(src: Move) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeUint(3211350992, 32);\n\t\tb0.storeAddress(src.target);\n\t};\n}\n\nexport function loadMove(slice: Slice) {\n\tconst sc0 = slice;\n\tif (sc0.loadUint(32) !== 3211350992) {\n\t\tthrow new Error(\"Invalid prefix\");\n\t}\n\tconst _target = sc0.loadAddress();\n\treturn { $$type: \"Move\" as const, target: _target };\n}\n\nexport type ReferralWallet$Data = {\n\t$$type: \"ReferralWallet$Data\";\n\tfactory: Address;\n\towner: Address;\n\tamount: bigint;\n\tseqno: bigint;\n};\n\nexport function storeReferralWallet$Data(src: ReferralWallet$Data) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeAddress(src.factory);\n\t\tb0.storeAddress(src.owner);\n\t\tb0.storeInt(src.amount, 257);\n\t\tconst b1 = new Builder();\n\t\tb1.storeInt(src.seqno, 257);\n\t\tb0.storeRef(b1.endCell());\n\t};\n}\n\nexport function loadReferralWallet$Data(slice: Slice) {\n\tconst sc0 = slice;\n\tconst _factory = sc0.loadAddress();\n\tconst _owner = sc0.loadAddress();\n\tconst _amount = sc0.loadIntBig(257);\n\tconst sc1 = sc0.loadRef().beginParse();\n\tconst _seqno = sc1.loadIntBig(257);\n\treturn {\n\t\t$$type: \"ReferralWallet$Data\" as const,\n\t\tfactory: _factory,\n\t\towner: _owner,\n\t\tamount: _amount,\n\t\tseqno: _seqno,\n\t};\n}\n\nexport type Draw = {\n\t$$type: \"Draw\";\n\tlotteryId: bigint;\n};\n\nexport function storeDraw(src: Draw) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeUint(746428760, 32);\n\t\tb0.storeInt(src.lotteryId, 257);\n\t};\n}\n\nexport function loadDraw(slice: Slice) {\n\tconst sc0 = slice;\n\tif (sc0.loadUint(32) !== 746428760) {\n\t\tthrow new Error(\"Invalid prefix\");\n\t}\n\tconst _lotteryId = sc0.loadIntBig(257);\n\treturn { $$type: \"Draw\" as const, lotteryId: _lotteryId };\n}\n\nexport type EmergencyWithdraw = {\n\t$$type: \"EmergencyWithdraw\";\n\tlotteryId: bigint;\n};\n\nexport function storeEmergencyWithdraw(src: EmergencyWithdraw) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeUint(807739057, 32);\n\t\tb0.storeInt(src.lotteryId, 257);\n\t};\n}\n\nexport function loadEmergencyWithdraw(slice: Slice) {\n\tconst sc0 = slice;\n\tif (sc0.loadUint(32) !== 807739057) {\n\t\tthrow new Error(\"Invalid prefix\");\n\t}\n\tconst _lotteryId = sc0.loadIntBig(257);\n\treturn { $$type: \"EmergencyWithdraw\" as const, lotteryId: _lotteryId };\n}\n\nexport type LotteryFactory$Data = {\n\t$$type: \"LotteryFactory$Data\";\n\towner: Address;\n\tlotteryCnt: bigint;\n\treferrers: Dictionary<bigint, Address>;\n\treferrer_cnt: bigint;\n\twithdraw_end: bigint;\n};\n\nexport function storeLotteryFactory$Data(src: LotteryFactory$Data) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeAddress(src.owner);\n\t\tb0.storeUint(src.lotteryCnt, 256);\n\t\tb0.storeDict(\n\t\t\tsrc.referrers,\n\t\t\tDictionary.Keys.BigInt(257),\n\t\t\tDictionary.Values.Address(),\n\t\t);\n\t\tb0.storeInt(src.referrer_cnt, 257);\n\t\tconst b1 = new Builder();\n\t\tb1.storeUint(src.withdraw_end, 256);\n\t\tb0.storeRef(b1.endCell());\n\t};\n}\n\nexport function loadLotteryFactory$Data(slice: Slice) {\n\tconst sc0 = slice;\n\tconst _owner = sc0.loadAddress();\n\tconst _lotteryCnt = sc0.loadUintBig(256);\n\tconst _referrers = Dictionary.load(\n\t\tDictionary.Keys.BigInt(257),\n\t\tDictionary.Values.Address(),\n\t\tsc0,\n\t);\n\tconst _referrerCnt = sc0.loadIntBig(257);\n\tconst sc1 = sc0.loadRef().beginParse();\n\tconst _withdrawEnd = sc1.loadUintBig(256);\n\treturn {\n\t\t$$type: \"LotteryFactory$Data\" as const,\n\t\towner: _owner,\n\t\tlotteryCnt: _lotteryCnt,\n\t\treferrers: _referrers,\n\t\treferrer_cnt: _referrerCnt,\n\t\twithdraw_end: _withdrawEnd,\n\t};\n}\n\ntype ReferralWalletInitArgs = {\n\t$$type: \"ReferralWallet_init_args\";\n\tfactory: Address;\n\tseqno: bigint;\n};\n\nfunction initReferralWalletInitArgs(src: ReferralWalletInitArgs) {\n\treturn (builder: Builder) => {\n\t\tconst b0 = builder;\n\t\tb0.storeAddress(src.factory);\n\t\tb0.storeInt(src.seqno, 257);\n\t};\n}\n\nasync function referralWalletInit(factory: Address, seqno: bigint) {\n\tconst __code = Cell.fromBase64(\n\t\t\"te6ccgECEgEAA50AART/APSkE/S88sgLAQIBYgIDA3rQAdDTAwFxsKMB+kABINdJgQELuvLgiCDXCwoggQT/uvLQiYMJuvLgiFRQUwNvBPhhAvhi2zxVE9s88uCCDgQFAgFYDA0CxO2i7fsBkjB/4HAh10nCH5UwINcLH94gghD+bw1Guo4wMNMfAYIQ/m8NRrry4IH6QAEg10mBAQu68uCIINcLCiCBBP+68tCJgwm68uCIMTN/4CCCEL9pU9C64wLAAJEw4w1wBgcAusj4QwHMfwHKAFUwUEMg10mBAQu68uCIINcLCiCBBP+68tCJgwm68uCIzxYBINdJgQELuvLgiCDXCwoggQT/uvLQiYMJuvLgiM8WEoEBAc8AAciBAQHPAMkBzMntVAKeMNMfAYIQv2lT0Lry4IH6QAEg10mBAQu68uCIINcLCiCBBP+68tCJgwm68uCIMYIAmt/4QlJgxwXy9H/4J28QggiYloChcogQNG1t2zwwfwgKAbb5ASCC8AQsT5ZQDh7ii6FMXdxClcQFAO84NhlTP/HvNzy+jHyGup4w+EFvJBNfAxKgAX/bMeCC8AlRkBlK7mEc6JXFUDrfhf2GTeeQV0YUL2CNPrL6rRTkuuMCCQAYAAAAAGFkZEZ1bmRzAVAxggCa3/hCUkDHBfL0f/gnbxCCCJiWgKEjWXIQI21tbds8MHABf9sxCgHKyHEBygFQBwHKAHABygJQBSDXSYEBC7ry4Igg1wsKIIEE/7ry0ImDCbry4IjPFlAD+gJwAcpoI26zkX+TJG6z4pczMwFwAcoA4w0hbrOcfwHKAAEgbvLQgAHMlTFwAcoA4skB+wgLAJh/AcoAyHABygBwAcoAJG6znX8BygAEIG7y0IBQBMyWNANwAcoA4iRus51/AcoABCBu8tCAUATMljQDcAHKAOJwAcoAAn8BygACyVjMAhG5bA2zzbPGxBgODwARuCvu1E0NIAAYAdbtRNDUAfhj0gABjlP6QAEg10mBAQu68uCIINcLCiCBBP+68tCJgwm68uCIAfpAASDXSYEBC7ry4Igg1wsKIIEE/7ry0ImDCbry4IgBgQEB1wDUAdCBAQHXADAUQzBsFOD4KNcLCoMJuvLgiRAAAiEBVvpAASDXSYEBC7ry4Igg1wsKIIEE/7ry0ImDCbry4IgBgQEB1wBZAtEB2zwRAEyNCGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARwWA==\",\n\t);\n\tconst __system = Cell.fromBase64(\n\t\t\"te6cckECFAEAA6cAAQHAAQEFoRqhAgEU/wD0pBP0vPLICwMCAWIEDQN60AHQ0wMBcbCjAfpAASDXSYEBC7ry4Igg1wsKIIEE/7ry0ImDCbry4IhUUFMDbwT4YQL4Yts8VRPbPPLggg8FDALE7aLt+wGSMH/gcCHXScIflTAg1wsf3iCCEP5vDUa6jjAw0x8BghD+bw1GuvLggfpAASDXSYEBC7ry4Igg1wsKIIEE/7ry0ImDCbry4IgxM3/gIIIQv2lT0LrjAsAAkTDjDXAGCAKeMNMfAYIQv2lT0Lry4IH6QAEg10mBAQu68uCIINcLCiCBBP+68tCJgwm68uCIMYIAmt/4QlJgxwXy9H/4J28QggiYloChcogQNG1t2zwwfwcKABgAAAAAYWRkRnVuZHMBtvkBIILwBCxPllAOHuKLoUxd3EKVxAUA7zg2GVM/8e83PL6MfIa6njD4QW8kE18DEqABf9sx4ILwCVGQGUruYRzolcVQOt+F/YZN55BXRhQvYI0+svqtFOS64wIJAVAxggCa3/hCUkDHBfL0f/gnbxCCCJiWgKEjWXIQI21tbds8MHABf9sxCgHKyHEBygFQBwHKAHABygJQBSDXSYEBC7ry4Igg1wsKIIEE/7ry0ImDCbry4IjPFlAD+gJwAcpoI26zkX+TJG6z4pczMwFwAcoA4w0hbrOcfwHKAAEgbvLQgAHMlTFwAcoA4skB+wgLAJh/AcoAyHABygBwAcoAJG6znX8BygAEIG7y0IBQBMyWNANwAcoA4iRus51/AcoABCBu8tCAUATMljQDcAHKAOJwAcoAAn8BygACyVjMALrI+EMBzH8BygBVMFBDINdJgQELuvLgiCDXCwoggQT/uvLQiYMJuvLgiM8WASDXSYEBC7ry4Igg1wsKIIEE/7ry0ImDCbry4IjPFhKBAQHPAAHIgQEBzwDJAczJ7VQCAVgOEwIRuWwNs82zxsQYDxIB1u1E0NQB+GPSAAGOU/pAASDXSYEBC7ry4Igg1wsKIIEE/7ry0ImDCbry4IgB+kABINdJgQELuvLgiCDXCwoggQT/uvLQiYMJuvLgiAGBAQHXANQB0IEBAdcAMBRDMGwU4Pgo1wsKgwm68uCJEAFW+kABINdJgQELuvLgiCDXCwoggQT/uvLQiYMJuvLgiAGBAQHXAFkC0QHbPBEATI0IYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABHBYAAIhABG4K+7UTQ0gABg8q546\",\n\t);\n\tconst builder = beginCell();\n\tbuilder.storeRef(__system);\n\tbuilder.storeUint(0, 1);\n\tinitReferralWalletInitArgs({\n\t\t$$type: \"ReferralWallet_init_args\",\n\t\tfactory,\n\t\tseqno,\n\t})(builder);\n\tconst __data = builder.endCell();\n\treturn { code: __code, data: __data };\n}\n\nconst referralWalletErrors: { [key: number]: { message: string } } = {\n\t2: { message: \"Stack underflow\" },\n\t3: { message: \"Stack overflow\" },\n\t4: { message: \"Integer overflow\" },\n\t5: { message: \"Integer out of expected range\" },\n\t6: { message: \"Invalid opcode\" },\n\t7: { message: \"Type check error\" },\n\t8: { message: \"Cell overflow\" },\n\t9: { message: \"Cell underflow\" },\n\t10: { message: \"Dictionary error\" },\n\t11: { message: `'Unknown' error` },\n\t12: { message: \"Fatal error\" },\n\t13: { message: \"Out of gas error\" },\n\t14: { message: \"Virtualization error\" },\n\t32: { message: \"Action list is invalid\" },\n\t33: { message: \"Action list is too long\" },\n\t34: { message: \"Action is invalid or not supported\" },\n\t35: { message: \"Invalid source address in outbound message\" },\n\t36: { message: \"Invalid destination address in outbound message\" },\n\t37: { message: \"Not enough TON\" },\n\t38: { message: \"Not enough extra-currencies\" },\n\t39: { message: \"Outbound message does not fit into a cell after rewriting\" },\n\t40: { message: \"Cannot process a message\" },\n\t41: { message: \"Library reference is null\" },\n\t42: { message: \"Library change action error\" },\n\t43: {\n\t\tmessage:\n\t\t\t\"Exceeded maximum number of cells in the library or the maximum depth of the Merkle tree\",\n\t},\n\t50: { message: \"Account state size exceeded limits\" },\n\t128: { message: \"Null reference exception\" },\n\t129: { message: \"Invalid serialization prefix\" },\n\t130: { message: \"Invalid incoming message\" },\n\t131: { message: \"Constraints error\" },\n\t132: { message: \"Access denied\" },\n\t133: { message: \"Contract stopped\" },\n\t134: { message: \"Invalid argument\" },\n\t135: { message: \"Code of a contract was not found\" },\n\t136: { message: \"Invalid address\" },\n\t137: { message: \"Masterchain support is not enabled for this contract\" },\n\t5555: { message: \"Lottery is not active\" },\n\t7825: { message: \"Not enough Ton\" },\n\t24518: { message: \"Lottery not close\" },\n\t37690: { message: \"Lottery is over\" },\n\t39647: { message: \"Access is denied\" },\n\t42504: { message: \"Already claimed\" },\n\t49030: { message: \"Too many tickets\" },\n\t49671: { message: \"Lottery not claimable\" },\n\t50970: { message: \"No ticket specified\" },\n\t51322: { message: \"You are not creator\" },\n\t54634: { message: \"You are not owner\" },\n\t55607: { message: \"You are not factory\" },\n};\n\nconst referralWalletTypes: ABIType[] = [\n\t{\n\t\tname: \"StateInit\",\n\t\theader: null,\n\t\tfields: [\n\t\t\t{ name: \"code\", type: { kind: \"simple\", type: \"cell\", optional: false } },\n\t\t\t{ name: \"data\", type: { kind: \"simple\", type: \"cell\", optional: false } },\n\t\t],\n\t},\n\t{\n\t\tname: \"StdAddress\",\n\t\theader: null,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"workchain\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 8 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"address\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 256 },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"VarAddress\",\n\t\theader: null,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"workchain\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 32 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"address\",\n\t\t\t\ttype: { kind: \"simple\", type: \"slice\", optional: false },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"Context\",\n\t\theader: null,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"bounced\",\n\t\t\t\ttype: { kind: \"simple\", type: \"bool\", optional: false },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"sender\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"value\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{ name: \"raw\", type: { kind: \"simple\", type: \"slice\", optional: false } },\n\t\t],\n\t},\n\t{\n\t\tname: \"SendParameters\",\n\t\theader: null,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"bounce\",\n\t\t\t\ttype: { kind: \"simple\", type: \"bool\", optional: false },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"to\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"value\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"mode\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{ name: \"body\", type: { kind: \"simple\", type: \"cell\", optional: true } },\n\t\t\t{ name: \"code\", type: { kind: \"simple\", type: \"cell\", optional: true } },\n\t\t\t{ name: \"data\", type: { kind: \"simple\", type: \"cell\", optional: true } },\n\t\t],\n\t},\n\t{\n\t\tname: \"Deploy\",\n\t\theader: 2490013878,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"queryId\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 64 },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"DeployOk\",\n\t\theader: 2952335191,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"queryId\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 64 },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"FactoryDeploy\",\n\t\theader: 1829761339,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"queryId\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 64 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"cashback\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"ChangeOwner\",\n\t\theader: 2174598809,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"queryId\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 64 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"newOwner\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"ChangeOwnerOk\",\n\t\theader: 846932810,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"queryId\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 64 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"newOwner\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"Ticket\",\n\t\theader: null,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"number\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 32 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"owner\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"CreateLottery\",\n\t\theader: 1817793233,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"creator\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"price\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"endTime\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"discountDivisor\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"BuyTicket\",\n\t\theader: 3310573309,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"recipient\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"amount\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 32 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"ticketNumbers\",\n\t\t\t\ttype: {\n\t\t\t\t\tkind: \"dict\",\n\t\t\t\t\tkey: \"uint\",\n\t\t\t\t\tkeyFormat: 32,\n\t\t\t\t\tvalue: \"uint\",\n\t\t\t\t\tvalueFormat: 32,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"refWallet\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: true },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"ClaimTickets\",\n\t\theader: 2609204369,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"ticketIds\",\n\t\t\t\ttype: {\n\t\t\t\t\tkind: \"dict\",\n\t\t\t\t\tkey: \"uint\",\n\t\t\t\t\tkeyFormat: 32,\n\t\t\t\t\tvalue: \"uint\",\n\t\t\t\t\tvalueFormat: 32,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"ticketLength\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 32 },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"LotteryInfo\",\n\t\theader: null,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"seqno\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"creator\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"ticketCnt\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"endTime\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"price\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"status\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"amountCollected\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"Withdraw\",\n\t\theader: 922360000,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"target\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"Lottery$Data\",\n\t\theader: null,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"factory\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"creator\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"seqno\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"ticketCnt\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"endTime\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 256 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"price\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 256 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"status\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 16 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"discountDivisor\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"claimed\",\n\t\t\t\ttype: { kind: \"dict\", key: \"address\", value: \"uint\", valueFormat: 8 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"feePercent\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"refPercent\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"rewardPerBracket\",\n\t\t\t\ttype: { kind: \"dict\", key: \"int\", value: \"uint\", valueFormat: 256 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"tickets\",\n\t\t\t\ttype: { kind: \"dict\", key: \"int\", value: \"Ticket\", valueFormat: \"ref\" },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"winnerCntPerBracket\",\n\t\t\t\ttype: { kind: \"dict\", key: \"int\", value: \"uint\", valueFormat: 256 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"amountCollected\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 256 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"feeAmount\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 256 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"finalNumber\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 32 },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"CreateWallet\",\n\t\theader: 4268690758,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"owner\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"Move\",\n\t\theader: 3211350992,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"target\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"ReferralWallet$Data\",\n\t\theader: null,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"factory\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"owner\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"amount\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"seqno\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"Draw\",\n\t\theader: 746428760,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"lotteryId\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"EmergencyWithdraw\",\n\t\theader: 807739057,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"lotteryId\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tname: \"LotteryFactory$Data\",\n\t\theader: null,\n\t\tfields: [\n\t\t\t{\n\t\t\t\tname: \"owner\",\n\t\t\t\ttype: { kind: \"simple\", type: \"address\", optional: false },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"lotteryCnt\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 256 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"referrers\",\n\t\t\t\ttype: { kind: \"dict\", key: \"int\", value: \"address\" },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"referrer_cnt\",\n\t\t\t\ttype: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"withdraw_end\",\n\t\t\t\ttype: { kind: \"simple\", type: \"uint\", optional: false, format: 256 },\n\t\t\t},\n\t\t],\n\t},\n];\n\nconst referralWalletGetters: ABIGetter[] = [\n\t{\n\t\tname: \"balance\",\n\t\targuments: [],\n\t\treturnType: { kind: \"simple\", type: \"int\", optional: false, format: 257 },\n\t},\n];\n\nexport const ReferralWallet_getterMapping: { [key: string]: string } = {\n\tbalance: \"getBalance\",\n};\n\nconst referralWalletReceivers: ABIReceiver[] = [\n\t{ receiver: \"internal\", message: { kind: \"typed\", type: \"CreateWallet\" } },\n\t{ receiver: \"internal\", message: { kind: \"text\", text: \"accept\" } },\n\t{ receiver: \"internal\", message: { kind: \"text\", text: \"withdraw\" } },\n\t{ receiver: \"internal\", message: { kind: \"typed\", type: \"Move\" } },\n];\n\nexport class ReferralWallet implements Contract {\n\tstatic async init(factory: Address, seqno: bigint) {\n\t\treturn await referralWalletInit(factory, seqno);\n\t}\n\n\tstatic async fromInit(factory: Address, seqno: bigint) {\n\t\tconst init = await referralWalletInit(factory, seqno);\n\t\tconst address = contractAddress(0, init);\n\t\treturn new ReferralWallet(address, init);\n\t}\n\n\tstatic fromAddress(address: Address) {\n\t\treturn new ReferralWallet(address);\n\t}\n\n\treadonly address: Address;\n\treadonly init?: { code: Cell; data: Cell };\n\treadonly abi: ContractABI = {\n\t\ttypes: referralWalletTypes,\n\t\tgetters: referralWalletGetters,\n\t\treceivers: referralWalletReceivers,\n\t\terrors: referralWalletErrors,\n\t};\n\n\tprivate constructor(address: Address, init?: { code: Cell; data: Cell }) {\n\t\tthis.address = address;\n\t\tthis.init = init;\n\t}\n\n\tasync send(\n\t\tprovider: ContractProvider,\n\t\tvia: Sender,\n\t\targs: { value: bigint; bounce?: boolean | null | undefined },\n\t\tmessage: CreateWallet | \"accept\" | \"withdraw\" | Move,\n\t) {\n\t\tlet body: Cell | null = null;\n\t\tif (\n\t\t\tmessage &&\n\t\t\ttypeof message === \"object\" &&\n\t\t\t!(message instanceof Slice) &&\n\t\t\tmessage.$$type === \"CreateWallet\"\n\t\t) {\n\t\t\tbody = beginCell().store(storeCreateWallet(message)).endCell();\n\t\t}\n\t\tif (message === \"accept\") {\n\t\t\tbody = beginCell().storeUint(0, 32).storeStringTail(message).endCell();\n\t\t}\n\t\tif (message === \"withdraw\") {\n\t\t\tbody = beginCell().storeUint(0, 32).storeStringTail(message).endCell();\n\t\t}\n\t\tif (\n\t\t\tmessage &&\n\t\t\ttypeof message === \"object\" &&\n\t\t\t!(message instanceof Slice) &&\n\t\t\tmessage.$$type === \"Move\"\n\t\t) {\n\t\t\tbody = beginCell().store(storeMove(message)).endCell();\n\t\t}\n\t\tif (body === null) {\n\t\t\tthrow new Error(\"Invalid message type\");\n\t\t}\n\n\t\tawait provider.internal(via, { ...args, body: body });\n\t}\n\n\tasync getBalance(provider: ContractProvider) {\n\t\tconst builder = new TupleBuilder();\n\t\tconst source = (await provider.get(\"balance\", builder.build())).stack;\n\t\tconst result = source.readBigNumber();\n\t\treturn result;\n\t}\n}\n","// TODO: Need to be moved to outside to json file and used as dynamic import\nexport const IS_TESTNET = true;\nexport const CONTRACT_ADDRESS = 'EQAndtP8cSPSkwlFK-lPMBYKDYMxsNUydc6yCiJcjnBuEfeO';\nexport const TON_CLIENT_API_KEY = 'f74dc0225ef2f2dd07d1afcce76ac62b2a7667ce8810702c8552d99a184317f5';\nexport const TON_CLIENT_ENDPOINT = IS_TESTNET\n  ? 'https://testnet.toncenter.com/api/v2/jsonRPC'\n  : 'https://toncenter.com/api/v2/jsonRPC';\n","import { Address, type OpenedContract, type Sender, type SenderArguments, beginCell, storeStateInit } from '@ton/core';\nimport { TonClient } from '@ton/ton';\nimport type { TonConnect } from '@tonconnect/sdk';\nimport { Lottery } from './tact_Lottery';\nimport { LotteryFactory } from './tact_LotteryFactory';\nimport { ReferralWallet } from './tact_ReferralWallet';\nimport { TON_CLIENT_ENDPOINT, TON_CLIENT_API_KEY } from '../constants';\n\n// TODO: Need to be moved to outside to json file and used as dynamic import\nexport const CONTRACT_ADDRESS = 'EQAndtP8cSPSkwlFK-lPMBYKDYMxsNUydc6yCiJcjnBuEfeO';\n\n// Инициализация TON клиента\nconst client = new TonClient({\n  endpoint: TON_CLIENT_ENDPOINT,\n  apiKey: TON_CLIENT_API_KEY,\n});\n\nexport const getFactoryInstance = async (): Promise<OpenedContract<LotteryFactory>> => {\n  const address = Address.parse(CONTRACT_ADDRESS);\n  const instance = client.open(LotteryFactory.fromAddress(address));\n  return instance;\n};\n\nexport const getLotteryInstance = async (lotteryAddr: Address): Promise<OpenedContract<Lottery>> => {\n  const instance = client.open(Lottery.fromAddress(lotteryAddr));\n  return instance;\n};\n\nexport const getRefWalletInstance = async (refAddr: Address): Promise<OpenedContract<ReferralWallet>> => {\n  const instance = client.open(ReferralWallet.fromAddress(refAddr));\n  return instance;\n};\n\nexport class TonConnectProvider implements Sender {\n  /**\n   * The TonConnect UI instance.\n   * @private\n   */\n  private readonly provider: TonConnect;\n\n  /**\n   * The address of the current account.\n   */\n  public get address(): Address | undefined {\n    const address = this.provider.account?.address;\n    return address ? Address.parse(address) : undefined;\n  }\n\n  /**\n   * Creates a new TonConnectProvider.\n   * @param provider\n   */\n  public constructor(provider: TonConnect) {\n    this.provider = provider;\n  }\n\n  /**\n   * Sends a message using the TonConnect UI.\n   * @param args\n   */\n  public async send(args: SenderArguments): Promise<void> {\n    // The transaction is valid for 10 minutes.\n    const validUntil = Math.floor(Date.now() / 1000) + 600;\n\n    // The address of the recipient, should be in bounceable format for all smart contracts.\n    const address = args.to.toString({ urlSafe: true, bounceable: true });\n\n    // The address of the sender, if available.\n    const from = this.address?.toRawString();\n\n    // The amount to send in nano tokens.\n    const amount = args.value.toString();\n\n    // The state init cell for the contract.\n    let stateInit: string | undefined;\n    if (args.init) {\n      // State init cell for the contract.\n      const stateInitCell = beginCell().store(storeStateInit(args.init)).endCell();\n      // Convert the state init cell to boc base64.\n      stateInit = stateInitCell.toBoc().toString('base64');\n    }\n\n    // The payload for the message.\n    let payload: string | undefined;\n    if (args.body) {\n      // Convert the message body to boc base64.\n      payload = args.body.toBoc().toString('base64');\n    }\n\n    // Send the message using the TonConnect UI and wait for the message to be sent.\n    await this.provider.sendTransaction({\n      validUntil: validUntil,\n      from: from,\n      messages: [\n        {\n          address: address,\n          amount: amount,\n          stateInit: stateInit,\n          payload: payload,\n        },\n      ],\n    });\n  }\n}\n"],"names":["storeTicket","src","builder","b0","loadTicket","slice","sc0","_number","_owner","dictValueParserTicket","beginCell","storeCreateLottery","b1","Builder","storeBuyTicket","Dictionary","storeClaimTickets","loadGetterTupleLotteryInfo","source","_seqno","_creator","_ticketCnt","_endTime","_price","_status","_amountCollected","storeWithdraw","initLotteryInitArgs","lotteryInit","factory","seqno","__code","Cell","__system","__data","lotteryErrors","lotteryTypes","lotteryGetters","lotteryReceivers","Lottery","address","init","contractAddress","provider","via","args","message","body","Slice","TupleBuilder","user","amount","ticketId","storeDeploy","storeDraw","storeEmergencyWithdraw","lotteryFactoryInit","lotteryFactoryErrors","lotteryFactoryTypes","lotteryFactoryGetters","lotteryFactoryReceivers","LotteryFactory","storeCreateWallet","storeMove","initReferralWalletInitArgs","referralWalletInit","referralWalletErrors","referralWalletTypes","referralWalletGetters","referralWalletReceivers","ReferralWallet","TON_CLIENT_API_KEY","TON_CLIENT_ENDPOINT","CONTRACT_ADDRESS","client","TonClient","getFactoryInstance","Address","getLotteryInstance","lotteryAddr","getRefWalletInstance","refAddr","TonConnectProvider","_a","validUntil","from","stateInit","storeStateInit","payload"],"mappings":"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"}